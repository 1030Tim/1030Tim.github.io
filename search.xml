<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>python程式設計</title>
    <url>/2025/01/31/python%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="f43fc02b178f7351cc8ced56b243a15205aef6eb3fff56e74aad8b6bdca1dfa7">466d0d1a741586f29fe265d1c12fa137a6f4ad66ebbdcb09b58e430dbdf6fa96b2412a46c913b6289b6bfcf8431b30c0af8bf89031e4b9f52b9fbea49dab847339c1050fae7fb38ac2b22d26e36e0461ce4f149a00088b2ff68e5dbee74d39868818dd35be436f276b2c6dac58004fcde9e23e3eff8ed831c465f0e10a531515aa363b2acda9ce2baa31783a21757219f92d2ccc201432ed0a6c427c3978d896f1c854b1e45288aade780da6fa86ac87ee21e211690b329b6fe3ee281657eac8bfd3dfc87d4704b25d1ea486364d7d45040a24b66e1247353cc448fbb27524b44ef3b2df2ac1220e6fbf5eb216409dd1b00751bcf7cc3b5895d7d421a41bf6aa4a4010e9e6a7fd6720d5b74f6f6ff1d2eb13cac75d3604e103658be8200c050eae36c7caadea5ddab75c0b98a57ce82f41c8b93b323dac9dbe8da9a76853469aed3fae02d156bb17c419af8a7aaa255582ef8e1aa83ce0926efe6cc56b69191b35428a8900b636fcc56b67f01d763b91a38e40d49bd95c5fe086130940555a4f8ef23f33feaa5bd8c85ae10096299b3e556d2bc27b05b9e238c833c48abfb05b6ec4758cc8efcab8596b06e7daf31851c1a72c8a2105a1052b6ec98fcdaa63cf3d9e9960ec547569a22d7ff47377cfa6617e3035e8337ebaa0db24657d042bc44b9044f414c748a0cbde1c63d7054bfbef188505e3b0877c753d6ecc8c8e8f8294228446c97cdc470d3916ed82900d6116862b60314197c0be00187745c56ce5a4a3eef2010f958ebb80c1471062dc455cd923e67c59aaf4bbeafd47479cfd9244b9b35435096793580aacb20fbd92f1a553db0609e01e1f5eb7341181dbb87883f6a768f2f2775d2a3e4bdd2549601be03a31f601e09eb520f64a841b86837196a1c3d6c447af7fe72f70b39ac2ddfe1a28679e40389d5a9b44cf3795c480928f0b220dbf0627c270feccfafedc550d97235bfa2dc74037ff8ecd08a7e7070eaec9e7e4c0c1358cfe4780063a4f83c333548392577114deb72a4e9d0aab2c246d0660a7e72ed7534a21bb7fc9ee71ffc376ba4425a719dcdeea3d9440c9cd0f16285ecf1892b70463a52c490240ef0ba96f2a680a63df249865ab98b80c8a104778d2a3cfa99c543b4a003b38ab5a3c29d8a2dd2894b1fbd1d11c60e02f57cdd757b830aabdf5b15f44762b05ac9b86d3d8e40ca4958ffaaa1db03b7a40658becb57419fffb7327d6c355b9ef6a0be89a7c19cb11147ce8178d3dd799e3653c4ee56ffd240cfe1111bea4d7571680edf34bbcc83bd7cde42fba4377793abac89daf298ae19e378d2110571209bb640ffc6c008668eeee44f2f458bb2ab7829e25dc2b7fe0ebd86c7ff59551b561ee3ffb90a109bcc72ae351cdf313180c2dcc76c27b03fbd17f9a08b87db2b426918908ae0f58d81f9dbc25e8216fdfe56b54b9c0ab6770e2b3e5867b5123dbeec58bf16897323314b627c6aa1c0d2baeb3173acb18943e75107bc3aca2ae71b8fb6110d71326d6bd1e84283e6e05283dc63c5be5d8faaec196ce11cfe9476668c5644d279377db1e998592492de01c20ec3b53d40af0791876587838d39597685a0b22a375198625632073cc61a7ae847c2824bbbc755675e0b18073c264ca28f74a917988cbb2fc31940709279a5c454830c4de8fb696c8bf93bc5ef6edb3b008c8df79c5462e5647a6a0dc1d2fdf0024b7efa2374d205b2ed4cd20fe80884bd8cd1fab644daac8e6227f4e4d155ebf027a81a4f06b428511218ea20eafc322f87ed25aa8675a8e012cc5897a63b06839b4006decfd541057d8aec247ebf762988c4b6f27e168064645fd73a1597ab82c87f0e23341c11ef47393daa6d80b151eea9a4e48f137f64f976b421ca2b14928820f6efa84a156f420a21f0783f7285bba6df9addea7b61b758155a3cef9202e160f8a75c5d20167600039829e4f9abfa09d8deb6726c101d2fa036f4a326d2d26da79b6a5c5601b44acd6c57a4c009e817b8e13f07baebc4ed9e9488aba9a81f16c5c8a632086e159a12b7408b94dce72cb95dde747c608ee73ce257dc8707e855518792c1640b8f5f0954f84325f9bc9573010fdad78e83ea3c1dc09decd71eded5627e502eccd359a935c7f0b4de3b69c0d6cbcd5b7f749e1abe1ec4a076081a0ad1d18fcc87912d8d8830b34594f4d65638fb731b380d5389657220b7316690d8965ad9665d011b5691d2eec9acbda635b4af53e70b678de7b0b5d2519fe4e0e28fed5b5ceeb0c209e36ae9d128f0867acbeff12771a6cc5c551f75dc78fc3f8be8d91c8c2393c0377be62708c59ca63e2e8e211d85583f5cfeb7595fabc9002ded3d0ee28653748174d609bcf197e46a4ceed15a93193b9f7a26d442148b1b46487a8053cc08a354958e0444de7b5270e39031a79abc7a42c7846ee5119d60dbafa886e79a8705914bb07fb598bf5908c0138103ed2a705c17a39bce040ddf7890272be54d7971e1a3fbfa09116ffc4e23461370fd26290749412ce4bf07f99c2b33d82055a0a1d06a48e6d40f90fe019f3b2fbae7bffe697b8ec7b263eae3c47bf65e326594b99ab9803a1776f9fed9a9ce6fa1efce63884f317ce5ad537fd1b0d8d5f0516b859aacfa58230a7dd69e2f6e1b95131421231414d88e6c28e98c69b100d9f69a715b9ef14b77549421732d3e32d4e4a0f8f932106411cfd3f5fe8d92c670ee2dcfca2d5b858bdaa6608f9f5194025882e8059490fd38f1e96b0b423efa4d415f1efa8083d267e7906fc5518b117029634b50b14fd72dea3a3e5d04857691012e2e6e282fcdfd8d6102b3bd97c46a353dfcbafcba3671f1ed3bfc5a28340108758f0d59cb251b6f10b95f15e09e56fa8564b52f7295358d98ed5edbee1107fd3b19443a5a43c688c96c9a017fad4a81707e525370106915a2c07aae0a6374d442ec506679eec51f3603facd3c6c34bc41b9fa2633399a9156597ac7c40ec448901fee036779f3ff18e14e42b4d0cb9f28c0bb14a1c09055c8726b3616451009221765d2425dfc37d2f64c7b93e46d14efb236e15bb8d34f546e034124e82c95eec39d343f23d1251a80a164d23a42cd557b0c14f821e395d738fea28d4ca244ee20dc33f4d70756737134535855a8f4dbd2b265c7ae73c302f461655e04825057fb79d7d3554fdb4d2c5a399b45cff3e574780826f0fd877ab60b6e9d5b6c92c4afbbb3de177cbb1c90f6d90278583ac9bc90a600a97c80f1756818295485450d022397b828934ccb84e83ace664850092439fefa7ad938dba5cf8184affe440d176a90654850c4078424ba2174b32580623a1cd37bdea8dca7bb5611e40a42efacab3e09e931c406201f43fa42b5fefdb5757babc71c5298f25753631e69ddcdc316d013854b3d2044b444fba11ddb88ec0d4cb80ae08f4660dc4be5ef6561898bc0b9103a7ccb222971db91419ab2b6c26a0e68d63620f77ef3d9116754667741743628ac2eb71f456014564f68f5fbb6be4aa37a6020124c0199fca27cabe06f015df42f7a0fc1883709f6eeea3deca77dabc6b59462dc3475eb4c3d8afe5704a64efad1c2431d17f201d86fca41b762eb3a3e0e499a1f8efbf8da9371ad5fb6767b3989401f5ef6f451205adbcfb187e538ed2846332dd1273ffe5ab00dedfadbc69aa2c16ae17cd6b1f993ebfc68f097ea6e8edf56db73fdfc24d009d1d0a06fbe8af37d2a5d4d3254217e471b0f34d44f80849da7b58647b4710b3f1072048f8351f77edd3793fd356a924818f7f1465c5bfd67f8c0dde8a8f77bf415630018f1230cc0666037ad196f1bd10656d65e6cda3a21e2d5c7d9599c203a8f92d4ea9d432b3ce813f7fd5951390203eacbbf5637628c61779dd81d06a56952e8d3794101403bd403f179ffe6e0282903b172c07bc2709682bcb5013c2244c7c0f24ba1f308c1a9b2e65ea181e643b73134e39d20ec7a5c45fb185456071f7acbe98dad5d8b80a6aa78423e9819b6f45559b3155dca5c0bf18190fa4a4cb86ae0fbb1ea10c69df74f250f6ec1602c6b3d0ad13d761b4abaff43106a42d247a4b4cd3e1f46c35662956245b4ac8d45ebe051b44ac7de8b4d1722a23594490f68e2048d3f37175aa8e15a0978366fd611a21b22a3108fb39cebd393847119a536efaed60c14f7f8c33d39cdb5165982cee3d08ef0ca0774af02e521983ef0fee07f26b31f5afd0050c4f0736493a87a9b9bc7e25d371303bb7b472d8ece2baef662f0da82023d81dd7b1893dd01a1a3885e7ee52f54d78b7b848722ede4e67fdf90ad55a4eea4d88461653b1445b5905b291d2b920f12c325f95237a5f30833c7af0d4e0a68c56ed76f7d61f620b93ff6327aca3dc425b26bdf7ef5f1b8ea03f8bebc100fdba5caa40aeadf922d7e6e35c9343e97c0a9f01f6f69f64938518221f6506ab8ff5be9c4c85a6b80e100d9029d93f75e9065595ee1c560d3178a29a039af3fa8aaedc528b621c9736c88f19f341dc78ca1708e49b4cea57433ecc50622be88ad492c54c4bd0e50fc7c29b275d99aa7435bdbedb46af6a88c1f2cee70b6a835d30ca6f4ac4cad86faeea35f1885e02952ad0b5fdcd810a95e211510105051e429c13ad37506c62c49f95d2e3e6acc4c4c51cb5f9444c29c90d3909ba029aa82a7c4a9d0c1497a363d1ddc8deeb63a579cf5cb825881ab80e3d6731fa0949baa7f4dba9589da4d11c404e13c3540906ed5be2826506185a37eedf67eb27559ccf621ef447342b9171d6919220d482df81a49da1be84bfe052e7a3724f6744004526ad4ed573436b89dc8bf3a280c59c8ae663903948bac145e9b8d7d9d5bc224333ba5950c26fbf6f78123780d413c4cdd4d179dde50d9d6691d8134ab1300c053ed3561977aba1895cac1e31e82b224b726321a8c85448d652fbf2c68c5b8f3d77b3962da1d712018cd095511fabbc1797156596db27f801da848b0d4e540fa1b57ae29f1fc5e4b732adf3f4320c335e8b4ed7d73ae322793f178d8b3295ff6e96199ae78b59a53b6c663c37805a29ae1482cc2050b01060ab5c9ac7fbd8932f9606e0ac1e85b309e3dcc9d1cf7d6fa81a245d32ef53df7f08dfa559688cfc2aa92c002ce341e65734a0b8159ec0e66f9267312e203ebd06a7781e81dc6f03f35666f3cbdeeb2ee5db5e2fef7a70d65f6d9b474dc1699226f7aa92021e46e90649f2ddf0047b1c637825596e949b748af27a4bb862223504409e309039a9edfa7905bc0b903f8c4025aac375ebe856e9b08dbd315054a288718fb2c916630ca61ac25662a1b5edf16a6dbd00ee6f2b3891d19fbebe37e2c388239a48a73322eae0a358cb426afb8ad8fe8b708c64a915f519611ae425e2486881b55c4fa6bd1718df0c4183971b4892d2fa9c5b456a8dbbc5eb0b83de5c360e6bb3fcbf1fe49af1a79d3dc1bd9af24e3065f1b1896c07cb079e0123239b8212436c6ec5cb2234e271c5b581b1f28a4739bd9c259ef67122c355b07f7420e555edd9413b4ca37f3ed7e38c2d516c02d1e273cae193d6c64349c9bf2f9808292f747afdaec104d58a08e53146a57c5b4a29466ef32a04848b156c48082360e6b1394f4cac57754f49a1278a540ffc38f8c4001afc53eb8e8d7b00327eb933e0a2abaaa3ec4375502fd8eb2e925e67e281afe168dd12d1ea36f6c6ab4f0a2e5256703cc710d5e9f556e2659ce46859b2aa3425f2426c133b812a211cd6e338cf8470d9cf952135fed2dc823516b10a8da1269baa99031afe66f390240d592046412aace249cdcfebdf4dc36efd0e0f166d64d41d918b56fa24fe5b27b8879b5eda3aff8b09f6af3eaff5da4426c1663225e123b1888927fe7ee582bb4c10f46e103226a4dcfe932f326c3732400f79f3287c29a89d9d7ed8ff13a97f67e928719e2cadb27d8808940e22a3603b909ea7dca675196922b518cfa17fe2a2f14d3319349d284479a6c8b11d6a124f528a3979d90dcc732437698f173c5bf56ddddf27affbbea92c44b6d3eb4b4b3d0c29a61d2fc269bcf53683943fb5bd9406f4de5f7724053b4b8e12d055445cfc0baac4e65439e9da26cf8c190c9549e6c1117ac429befa4a3a17c09e6e3c26cf4bf0e4d3ed2d5c714b996654674680c3e6717969d3cdfdb1ba7748554b18547148ce3f0e07aa5d3f25593430aa6668b3e0ee128f1b0bfc9666debbb5b5a33139e577f9e2ec2ee0e4e5c2faafceee3e0a7f0c1ba8344b8a12afe5d9e066a2ed469ee3a7fa36e9c3bc97e41ea84c63cf342296271bfb465343132eab618129d19e3287612f576603164e79d43b3c8f62d0d259b32d93264f07af65d472573a26e8cbe191af049be6f34b5a16a9b7faab658f1ccd1fc6abc1054c1c0ecd692772b98ef5e4dd36997a566eab10c5bcd96bafa6e559b7f07888c260fb5af900708146c870023d308f519d62ae2e47f9a671160eaffea0bd025832b4ad831223f1d44d9a43e37e532348a8481ecd7f95c71418f88a878092a2ed3e62528dfc7b6e9e88763fd3d18a18633d95d3f18db7740487bd8f0c5857ea0d57deb4bd79a916636a961fc30b2964fe53c5a68b68d4e3a2f32c12e3ff448cb70c1d0f93c57c152b727b3346dd9b89308c7c169c0efcf8383bacc5fbc2e19741de5d061d5c8ab9907d0f4c2237592ee39cc8c5df359ae6e0f78683679927e7a177a74d1b0796ab35bdfcae607b1ad823abedb2ee45722eb28bb8dd4bfe3c422b482560683fb3839d31966512b0eaffbfa92d04f41614fcbb6b1ef4b35a8173c3432e4278fedca24c05b3df9beffd86001a64bb390be5ccd5a8526c7f0f5c2a9536b3d3a070bf31395a64c7c7c38fae5375bd2edd275abb3e92a353049235d5bf5d740fe256a79d863fed6acf63a56c2a312ad09ac142c9be3ed881a419fa4a49859c73ca1cae2e0cb42c9ca84785b4d8553edec750ac7a94d7fdf271da60eb3815a03edb27442c76af02e10e524c8f2802e729f1eb4c56bb1bf2b7b3e061979104212e8f01eba444f17f75cdc2866cf878e9400e555c3d79287c0b9c31d75d2b0e2ff565970f2d865b6e7c26f8f9c565babd000b4c74a61bdf16946cd6e52a1ee56c2b5b1366ae74a6748a83e0d8f852fc7f9df8881b92f51f429e4d72569a7e4845edfc0dad31bb06940400f764c89233163864e18ac920abe8d18a73cad682fca3a5bcceb0652bef919f2e1a3688fd1357a8daeb26ad767c97ff59a8b75f7151b412f087bac0c50b3a11367f1126ac032538a127cf5cee3032152ceed9b2d779245be01f04efa9fdf43cb0a86126423edd792ef28a5af229955ba6c0d00bf462d2ca691a920db2d57efc173fa3c84ef74e496d9cf165ceecdcb227358ccccb7657c8a3095e78945d7aa02e3826e6854ca0cc9b1889cd7c4f2a775bc80b87c679de487c3a8d452abecbd7c104a6c902417e77034d27d63d49d66bdba870ae2abdd4ce73fd7eec42038b61f852da61295a92c2418721fb60234dc064b10e5d9db8cae017b28789bc4836acc17d7c529f6fff86e7ce2cd6231ce28eb51555ccbab9a45ee55baff4ef1b53ae40f493d78d1476a11c52ca188c1a0c5c2e658a1384df1cfa856b447e910952cdb5013ca9a15b02e1c4424cf03a7d5bc1ec74ae65840d97ed7b016f573be57a4e2e5dfe119b97e8d2b67147818c980ba04424f647f2350d049da06fc9836b799dfbc055490d423d9c39c7d8c3fbee80ff040a8659aa1e9a00795f0255b12ef07de0994a752f6e385ccbde72d1d585920bb16d44ae1a43b9d8c3201a58a39d403d1b048274db9e1e8adfbbe8e8c0a446d665b9e1752f832998af34327553db854882001029535c0d4d67846e120b1a44d3bc3f80976101a148918031cef7a1d84d0d8a73a74d328517a8d4ccc69f6abab3e7737efc61a23d50c963713bd12140ec2d988b12fc0fc0d530c2b4bcd25055e8227acaa6aa889d4af3549244891d4b3a7e02481b7dae2a372a8a8d53112eb695fd099d4d1d49284a3be3ddaf36bad95abad5b4b3919ce2fca9cb7ed077ddeb51892a7d327b5d0f0ee039b396527a6a7a03c4832eba0d51aa8056a7a179fed95ee8c7ef6707ba7bf1d6da8b24f777d501e27f3582c23bd6ec439b4c1b9d53b6962acb5eeacfea8eed7887c1a7bb6a634bfffc9f849aa404852ab121273e662da1e20931149ab9e62af2c9d7ad67388adbdc969b1a5e4866d0659ab36fbb0bce328a323dc5d40b6d16ba5a48ecf6188bba6b42f6233464d92c5aa7528a64b99011ddde9da377935734c57743f871877eac2b002a9eb7bdf00d64cf77994bdd350978e27d8ce77d55b218fc569386b1aff34d28c4b1cbba020cf232d39ae92e9f2e6cd6aab2e64f0d71f114d03a2387c02c7522db0c40856efe291a0f26ffccac1436595e31c809d5473b3f9552a66ebfc65610c2bc8d53d75b57429d5602740a7a2a42c86d535bc39c655a7ec56523ecca74e7b7d1501798bbd19794b1fe9f4b84d6a5be8d5d22ec675a28c09b38df97cbb360b31addf8ad266c34e15eb0a5be0b4960e45352d17651bbd2f86e995989879b5d4a3009af4d931f44c4e5a1fde71905a220c8035f1714394656af898ff721ce571ea6ddea8c7287fbf5b68bb7eeda1eb32d9256932c1b78778b063b8dc1863d41214c8a8521bd768926288705d4b6dd77680a291d4d0cc042f4e0012c211041004b6f552bfcf8bd8415603c05213d8052bd856f7d9f27471fda3888cf14510790cc82912824dfec2cbe987c1e0065c4f282333d125c6190c9a4cecbb03a6c7ed78f970283b09d2572d4a5a10dc238061d55582f9f58098cfb87b63f6a47ab28813143dd52afad984dffb0ad071a04fe5dedf5f253ebc34f38e89f33d1583c0ade0e52f2b60457692ee4fe77d466f653c3ecc9eaa161a455e02bb59a164d16b85016747f56e5bb2517e0e24ff5cb44e6641fcb7b9eeeebf886d46561c9a77c09aa10e5acb2af199c8efb5b3ad5a5a2a4eb13adf563cbd01880d5d4291182d75bc60b85a60ddcd262a9a25dfad9cb0f9b9b396786a8791e51152ce1cf9732a81a78f9782b84578b6e29d1d52bf0aef7311045ee8961383be238414572d3f8b45c7588fa32d0e7e9211c475543dc9d7a43063022d6ae1612836eeb763a37cb5417e6ced652adf4d3c1e8fec67abfd0a8ee59c265cf3597f7096e30fffb972154fdc0497e4831593ba0e7ec69683ffa3272911562c2401cb3cce5aa5e83ed5fb06fb554fb3c79598e7b9e40903d3484</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>swiftUI ios製作回顧</title>
    <url>/2024/08/31/swiftUI-ios%E8%A3%BD%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SwiftUI-Ios"><a href="#SwiftUI-Ios" class="headerlink" title="SwiftUI Ios"></a>SwiftUI Ios</h1><h2 id="語法介紹"><a href="#語法介紹" class="headerlink" title="語法介紹"></a>語法介紹</h2><ul>
<li>Vstack{ } 垂直堆疊</li>
</ul>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">VStack</span> &#123;</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;Hello&quot;</span>)</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;World&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>將兩個文字上下垂直疊起來<br>變成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello</span><br><span class="line">World</span><br></pre></td></tr></table></figure>
<ul>
<li>Hstack{ }  水平堆疊</li>
</ul>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">HStack</span> &#123;</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;Hello&quot;</span>)</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;World&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>文字左右堆疊<br>變成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello Wold</span><br></pre></td></tr></table></figure>
<ul>
<li>Zstack{ } 重疊</li>
</ul>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">ZStack</span> &#123;</span><br><span class="line">    <span class="type">Image</span>(<span class="string">&quot;background&quot;</span>)</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;Overlay text&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>兩個圖層疊在一起</p>
<ul>
<li>image() 用來渲染圖片，通常是來自資源文件或 URL 的圖片。</li>
</ul>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">Image</span>(<span class="string">&quot;exampleImage&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>自主學習</category>
      </categories>
  </entry>
  <entry>
    <title>感謝生命中的你</title>
    <url>/2024/09/01/%E6%84%9F%E8%AC%9D%E7%94%9F%E5%91%BD%E4%B8%AD%E7%9A%84%E4%BD%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="有感而發想，想對幾位貴人說聲謝謝–1130902"><a href="#有感而發想，想對幾位貴人說聲謝謝–1130902" class="headerlink" title="有感而發想，想對幾位貴人說聲謝謝–1130902"></a>有感而發想，想對幾位貴人說聲謝謝–1130902</h1><ul>
<li><p>葉Ｏ銘教練<br>感謝您的出現、願意破格教一個沒運動底子的人學撐竿跳高！<br>因為有您的教授技術以及種種鞭策<br>讓我一直熱情不減的想會撐竿跳高給我的奧妙<br>我愛撐竿跳高 很愛 很愛<br><br>因為您不放棄我，所以我才能繼續訓練，繼續突破自己！<br>我深知不是您最耀眼的那顆星<br>先天沒運動細胞 卻有後天凡夫俗子的干擾<br>但我會一點一點進步<br>越是不可能，我就越有繼續努力的機會<br>所以，教練 真的很謝謝您！<br>之後還請您多多指教</p>
</li>
<li><p>歐Ｏ雄老師<br>感謝您一直不斷的指導我許多專題報告、資料的製作<br>不厭其煩重複聽我報告又報告<br>不斷的修正我的種種不OK<br>因為有老師的指導與調整<br>我不怯場、漸漸知道一些小眉角<br>佔用您許多寶貴時間<br>今天忽然想付諸文字告訴您<br>「有您真好」、「謝謝您」<br>當然<br>面臨關鍵時刻的逼近<br>我必須展現我的「會跟」<br>希望得到您的題點指導<br>謝謝您</p>
</li>
</ul>
<p>哎呀<br>開學第二天<br>看似沒變卻不一樣了<br>看似變了但又還是一樣<br>所以<br>寫下這謝感言<br>還有很多善知識貴人在幫助我<br>也都謝謝你們<br><del>未完</del></p>
]]></content>
      <categories>
        <category>撐竿跳系列</category>
      </categories>
  </entry>
  <entry>
    <title>撐竿跳高介紹</title>
    <url>/2024/08/31/%E6%92%90%E7%AB%BF%E8%B7%B3%E9%AB%98%E4%BB%8B%E7%B4%B9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="簡介-文獻"><a href="#簡介-文獻" class="headerlink" title="簡介 -  文獻"></a>簡介 -  文獻</h2><p>在田徑跳步運動中撐竿跳高運動是唯一使用器具，<br>也是最具難度、複雜性與技巧性的項目<br>（王代才、張武記，1994;Morlier,J.&amp;Cid,M.,1996;Bussabarger,2001）。<br>自從1817年開始採用木質跳竿創造第一成績後，<br>經歷竹竿、鋁竿、尼龍竿與石墨纖維竿等，<br>直到1962年才改用玻璃纖維竿<br>（游正忠，2008）。<br>優越的物理特性，使竿子更加輕便、彈力更大、韌性強、握感好<br>（李北玉，2001；孫南，2006）<br>撐竿跳高運動是田徑運動項目中困難度最高，<br>也是亞洲運動會和奧林匹克運動會競賽中，<br>在教學和訓練上需要經過細膩且完整的動作分析過後逐步進行<br>（謝佳翰，2019）。<br>其動作包括持竿、助跑、插竿、起跳、<br>弓身、擺體、捲體、伸展、轉身、<br>倒立、推竿（過竿）及後仰等十二個環節<br>（葉健銘，2022）。<br>這十二個動作需在約十秒內完成，<br>每一個動作都環環相扣因此。<br>與其他跳躍項目的助跑不同，撐竿跳高的助跑過程中，<br>選手需在負重情況下維持最高且可控的助跑速度，<br>這將直接影響最終的成績<br>（謝佳翰，2019）。<br>在人-竿相互作用的結合下，將人體拋向更高越過橫桿，<br>也就是將動能轉變為位能的過程，這是一個技術複雜，<br>且困難性高的項目，<br>所以選手必須擁有較高的水平速度、跳躍及體操技巧的能力<br>（Linthorne，2000）。</p>
<p><code>在台灣，男子撐竿跳高的紀錄為：5公尺38公分（林志成，2024年創下)</code><br><code>而國際撐竿跳高男子紀錄則為：6公尺26公分（Mondo Duplantis，2024年)</code></p>
<iframe 
    width="auto" 
    height="auto" 
    src="https://www.youtube.com/embed/U0GnAT-gMhk?si=E5Sr2PJWWdWOuUnd" 
    frameborder="0" 
    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
    allowfullscreen>
</iframe>

<h2 id="說明"><a href="#說明" class="headerlink" title="說明"></a>說明</h2><p>2024-09-02 待更新</p>
]]></content>
      <categories>
        <category>撐竿跳系列</category>
      </categories>
  </entry>
  <entry>
    <title>回顧持竿助跑與成績之關聯 高二下</title>
    <url>/2024/08/31/%E6%8C%81%E7%AB%BF%E5%8A%A9%E8%B7%91%E8%88%87%E6%88%90%E7%B8%BE%E4%B9%8B%E9%97%9C%E8%81%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="自助學習過程與說明"><a href="#自助學習過程與說明" class="headerlink" title="自助學習過程與說明"></a>自助學習過程與說明</h1><h2 id="回顧一下高二實做的點點滴滴"><a href="#回顧一下高二實做的點點滴滴" class="headerlink" title="回顧一下高二實做的點點滴滴"></a>回顧一下高二實做的點點滴滴</h2><p>⬇️製作過程及影片<br><br><br><video controls autoplay muted width="100%" height="auto"><br>  <source src="/video/study-process-summary.mp4" type="video/mp4"><br>  Your browser does not support the video tag.<br></video><br><br><br><br><br><br></p>
<h2 id="ppt發表"><a href="#ppt發表" class="headerlink" title="ppt發表"></a>ppt發表</h2><iframe src="https://drive.google.com/file/d/1i1QTspB7CuqAhdsL-nv8IIkh0SgxPHAv/preview" width="100%" height="600px"></iframe>

<p>榮幸代表學校前往參加屏一區自主學習共好計畫</p>
<p>過程中非常的緊張</p>
<h2 id="動機"><a href="#動機" class="headerlink" title="動機"></a>動機</h2><p>某次練習中，看到教練正指導著初入門的學弟撐竿跳高基本動作，<br>學弟的表情卻顯得一副茫然；那一幕極像當年懵懂的我，<br>總在每一次的「感覺」中體會教練所指的「再如何一點、如何一點」，<br>孰不知差之毫釐，失之千里！<br>撐竿跳高的「技術」如同畫家在作畫時的「筆觸」般，都是很「抽象的感覺」。<br>哪怕以詳細的文字描述，仍存在著每個人身體條件及個人理解力的不同，<br>而需將這種抽象感累積而成。</p>
<p>在棒球運動中，投手的每個動作都可以被「數據化」，<br>每個細節都會影響到最終的投球軌跡。<br>那麼，撐竿跳高呢？這項運動由12個動作組成，<br>而從一開始的持竿助跑來看，<br>持竿助跑動作是否與成績有直接的關聯呢？</p>
]]></content>
      <categories>
        <category>自主學習</category>
      </categories>
  </entry>
  <entry>
    <title>機器學習</title>
    <url>/2024/09/02/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script type="text/javascript" async
  src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/MathJax.js?config=TeX-MML-AM_CHTML">
</script>

<p>有錯誤麻煩拜託寫信給 <a href="mailto:&#x6a;&#117;&#x6e;&#x32;&#48;&#x30;&#54;&#x31;&#x30;&#51;&#x30;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;">jun20061030@gmail.com</a><br>或填寫此表單 <a href="https://forms.gle/8ba6PxkGUZME6V6X6">https://forms.gle/8ba6PxkGUZME6V6X6</a><br><a href="https://forms.gle/8ba6PxkGUZME6V6X6">連結</a></p>
<h1 id="ML-學習筆記"><a href="#ML-學習筆記" class="headerlink" title="ML 學習筆記"></a>ML 學習筆記</h1><p>機器學習（ML, Machine Learning）本質上是幫助我們找出人類難以明確寫出的複雜函式與規律。</p>
<h2 id="回歸（Regression）"><a href="#回歸（Regression）" class="headerlink" title="回歸（Regression）"></a>回歸（Regression）</h2><p>當模型的輸出是一個連續數值時，這稱為回歸。例如：</p>
<p>房價預測（輸入：房屋面積、房齡；輸出：價格）<br>銷售量預測（輸入：天氣、廣告投放量；輸出：銷售數量）</p>
<h2 id="分類（Classification）"><a href="#分類（Classification）" class="headerlink" title="分類（Classification）"></a>分類（Classification）</h2><p>分類是讓機器在有限選項中做出選擇。例如：</p>
<p>電子郵件分類（輸入：郵件內容；輸出：垃圾郵件 &#x2F; 非垃圾郵件）<br>圖片識別（輸入：圖片；輸出：貓 &#x2F; 狗）</p>
<h2 id="結構化學習（Structured-Learning）"><a href="#結構化學習（Structured-Learning）" class="headerlink" title="結構化學習（Structured Learning）"></a>結構化學習（Structured Learning）</h2><p>除了數值預測與分類，機器學習還可以產生有結構的輸出，例如：</p>
<p>生成圖像（如 DALL·E）<br>自動寫作（如 ChatGPT）<br>自動翻譯（如 Google 翻譯）</p>
<h2 id="機器學習的核心步驟"><a href="#機器學習的核心步驟" class="headerlink" title="機器學習的核心步驟"></a>機器學習的核心步驟</h2><h3 id="找出函式與模型設計"><a href="#找出函式與模型設計" class="headerlink" title="找出函式與模型設計"></a>找出函式與模型設計</h3><p>找到合適的函式需要具備一定的領域知識（Domain Knowledge）。</p>
<p>定義函式：<br>例如線性回歸模型：<br>$$<br>y &#x3D; wX + b<br>$$<br>其中：<br>(y) 是我們要預測的數值（目標變數）<br>(X) 是輸入變數<br>(w) 為權重（weight），(b) 為偏差（bias）<br>定義 Loss（損失函數）：<br>Loss 是衡量預測誤差的函數，例如：<br>均方誤差（MSE, Mean Squared Error）：<br>$$<br>MSE &#x3D; \frac{1}{n} \sum_{i&#x3D;1}^{n} ( y_i - \hat{y_i} )^2<br>$$<br>平均絕對誤差（MAE, Mean Absolute Error）：<br>$$<br>MAE &#x3D; \frac{1}{n} \sum_{i&#x3D;1}^{n} | y_i - \hat{y_i} |<br>$$<br>交叉熵（Cross-Entropy）：適用於分類問題</p>
<h3 id="最佳化（Optimization）"><a href="#最佳化（Optimization）" class="headerlink" title="最佳化（Optimization）"></a>最佳化（Optimization）</h3><p>目標是讓 Loss 變得最小，主要方法是梯度下降（Gradient Descent）：</p>
<p>初始化權重$$（隨機選擇一組 ( w_0, b_0 )）$$<br>計算損失函數的梯度（求導數得到斜率）<br>根據梯度更新參數<br>若梯度為負數，則增加 ( w )<br>若梯度為正數，則減小 ( w )<br>缺點：可能陷入局部最小值（Local Minima）</p>
<h3 id="進階最佳化方法"><a href="#進階最佳化方法" class="headerlink" title="進階最佳化方法"></a>進階最佳化方法</h3><p>學習率（Learning Rate）調整：<br>若學習率太大，可能錯過最佳解（oscillation）。<br>若學習率太小，收斂速度變慢。<br>改進方法：<br>Momentum（動量法）<br>Adam Optimizer（適應性學習率調整）<br>5. 總結</p>
<p>機器學習的目標是找到合適的函式，使模型可以有效地學習並做出準確預測。常見問題類型包括回歸、分類及結構化學習。透過 Loss 設計與梯度下降等方法，模型可以逐步逼近最優解。</p>
]]></content>
      <categories>
        <category>知識</category>
      </categories>
  </entry>
  <entry>
    <title>計算機歷史</title>
    <url>/2024/09/04/%E8%A8%88%E7%AE%97%E6%A9%9F%E6%AD%B7%E5%8F%B2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="初入計算機概論"><a href="#初入計算機概論" class="headerlink" title="初入計算機概論"></a>初入計算機概論</h1><p>計算機概論是所有電腦的基礎</p>
<p><del>如果你是國文系的最好修計算機概論</del><br><del>如果你是歷史系的最好修計算機概論</del></p>
<h2 id="快速進入"><a href="#快速進入" class="headerlink" title="快速進入"></a>快速進入</h2><h3 id="計算"><a href="#計算" class="headerlink" title="計算"></a>計算</h3><ul>
<li><p>希臘阿基米德以極限求圓面積</p>
</li>
<li><p>羅馬</p>
<ul>
<li>羅馬數字：非對位系統</li>
<li>羅馬幾乎失聯了所有的希臘知識</li>
<li>例如他們不知道希臘已經認證的地球是個圓形</li>
</ul>
</li>
<li><p>阿拉伯</p>
<ul>
<li>大量的翻譯希臘文獻</li>
<li>阿拉伯 採借了印度的數字符號</li>
</ul>
</li>
<li><p>歐洲</p>
<ul>
<li>展開了 十字軍東征 的侵略掠奪得到的寶貝<ul>
<li>譯成阿拉伯文的希臘文明遺產</li>
<li>十進制阿拉伯數字與計算法</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="計算機始的重要人物"><a href="#計算機始的重要人物" class="headerlink" title="計算機始的重要人物"></a>計算機始的重要人物</h3><ul>
<li>Blaise Pascal(1623 - 1662)</li>
</ul>
<p><img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT49lr-AocEsoaTAGI7SE0Zhh-21wZhp20cdA&s"></p>
<p>在11歲時自行發展歐氏幾何，並證明「三角形內角和為 180°」<br>Pascal在19歲到21歲為了幫助父親課稅，發明了堪稱史上最早的計算機械。<br>Pascal 24歲，開始進行大氣壓力的實驗， 並發現大氣壓力隨海拔增高而減少的事實，並由此得到大氣層外必為真空的結論，</p>
<ul>
<li>Charles Babbage (1791–1871 )</li>
</ul>
<img src="https://media.hswstatic.com/eyJidWNrZXQiOiJjb250ZW50Lmhzd3N0YXRpYy5jb20iLCJrZXkiOiJnaWZcL3doby1pbnZlbnRlZC1jb21wdXRlci0yLmpwZyIsImVkaXRzIjp7InJlc2l6ZSI6eyJ3aWR0aCI6ODI4fX19" width="50%" >
英國數學家、發明家兼機械工程師。由於提出了差分機與分析機的設計概念，被視為電腦先驅。

<ul>
<li>Augusta Ada Byron (1815-1852)</li>
</ul>
<p>她是第一位主張計算機不只可以用來算數的人，<br>也發表了第一段分析機用的演算法。因此，<br>愛達常被公認為史上第一位程式設計師。</p>
<img src="https://www.lookfar.com/wp-content/uploads/2017/06/ada-image-bates-blog-1024x683.jpg" width="50%">

<ul>
<li>Mark I (Howard Aikan )1943<br>是美國第一部大尺度自動數位電腦，被認為是第一部萬用型計算機。<br>它的生產和設計者（IBM）給它起的名字是全自動化循序控制計算機<br>，哈佛一型是它的使用者哈佛大學給它起的名字。<br>哈佛一型是第一部被實作出來的全自動電腦，<br>同時與當年的其他電子式電腦相比它非常可靠。<br>大家認為「這是現代電腦時代的開端」以及「真正的電腦時代的曙光」。</li>
</ul>
<img src="https://www.thoughtco.com/thmb/b6GQkWD-BBjPRJ1wlEY2mCQtpDY=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/GettyImages-107636032-293dc66802a54c4685892d2bb7831ef5.jpg" width="50%">

<img src="https://www.digikey.tw/-/media/Images/Article%20Library/TechZone%20Articles/2023/October/An%20Introduction%20to%20Relays/article-2023october-an-introduction-to-relays-fig1.jpg?la=en&ts=a2098369-75cf-4d24-bce6-6d4e008a5421" width="50%">

<p>第一台利用繼電器取代電腦</p>
<ul>
<li>Grace Hopper (1906-1992)</li>
</ul>
<p>全世界第一套的compiler: A-0</p>
<ul>
<li>第一個bug</li>
</ul>
<p>1947 年 9 月 9 日，<br>哈佛大學 Mark II 電腦的一名工程師團隊記錄了第一個實際的電腦「錯誤」<br>一隻飛蛾卡在機器的繼電器之間。記錄於 15:45，錯誤昆蟲的遺骸被貼在頁面上，<br>上面寫著：</p>
<img src="https://www.computinghistory.org.uk/userdata/images/large/13/42/product-111342.jpg" width="50%">
“發現錯誤的第一個實際案例。”

<p>電腦先驅格蕾絲·霍珀 (Grace Hopper)是哈佛 Mark II 團隊的成員，<br>但史密森學會指出，該日誌可能不是霍珀的。然而，她很可能幫助這件事變得出名。</p>
<ul>
<li>ENIAC (計算彈道)1946</li>
</ul>
<p>世界上第一部可變程式的電子計算機<br>透過插孔改變指令</p>
<img src="https://s314.siliconimg.com/kb/content_images/2022/02/14/2146963/1644824448_240.jpg?imageView2/2/w/600" >

<ul>
<li>John von Neumann (1903-1957)</li>
</ul>
<p>內儲程式的計算機(程式與資料都儲存<br>在電腦裡面 )IAS computer</p>
<ul>
<li>Neumann 架構</li>
</ul>
<img src="https://files.codingninjas.in/article_images/von-neumann-architecture-1-1710223594.webp" width="50%">

<p>類似list一條list儲存多種資料</p>
<ul>
<li>Alan Turing</li>
</ul>
<p>他被譽為電腦科學與人工智慧之父。<br>二次世界大戰期間，「Hut 8」小組，<br>負責德國海軍密碼分析。 期<br>間他設計了一些加速破譯德國密碼的技術，<br>包括改進波蘭戰前研製的機器Bombe，<br>一種可以找到恩尼格瑪密碼機設定的機電機器<br><img src="https://www.scienceshot.com/wp-content/uploads/2024/06/turing1-jpg.webp" width="50%"></p>
<p>圖靈機，又稱確定型圖靈機，<br>是英國數學家艾倫·圖靈<br>於1936年提出的一種將人的計算行為抽象化的數學邏輯機，<br>其更抽象的意義為一種計算模型，<br>可以看作等價於任何有限邏輯數學過程的終極強大邏輯機器</p>
<h2 id="打字機"><a href="#打字機" class="headerlink" title="打字機"></a>打字機</h2><ul>
<li>QWERTY<br>音譯：科蒂鍵盤，是各國通用的現今流行的鍵盤組合<br>由1867年10月提出的專利<br>QWERTY鍵盤安排次序的原則是<br>為了要減少打字機在打字時連<br>動杆之間的擠壓及故障發生率的狀況，<br>因而要把常用字母隔開</li>
</ul>
<p>白話點：<br><code>是為了讓打字速度不要那麼快</code><br><code>避免打字機故障</code></p>
<p>但現今技術以解決這項問題<br>QWERTY組合卻早已廣為流傳<br>所以是無法輕易改變的</p>
<ul>
<li>Dvorak<br>在1930年代期間設計，<br>是主流鍵盤排列QWERTY鍵盤的競爭對手</li>
</ul>
<img src="https://dvorak-keyboard.com/wp-content/uploads/dvorakkb.png" width = "400">
德沃夏克和迪力在研究過字母頻率和手的生理結構之後，
依以下的宗旨設計了這種鍵盤的排列方式

<ul>
<li>電傳打字機</li>
</ul>
<img src="https://www.cmm.gov.mo/images/exhibits/2_5_4_1_chi.png" width="400">

<p>1949年8月16日台灣正式使用<br>遠距離列印交換的編寫形式。<br>電傳既具有電話的快速，<br>又具有打字機的準確，<br>尤其是當電文中有資料時，<br>這種優點表現得特別明顯。<br>人們普遍認為，<br>電傳這種通訊方式，<br>除了具備高效性和精確性之外，<br>還比電報和電話更為便宜。<br>電傳是在傳真機普遍使用以前的通訊裝置，<br>其原理有點近似電報</p>
<p>例如說：<code>我在屏東打字，字會顯示在台北的機器上</code></p>
<h2 id="GUI"><a href="#GUI" class="headerlink" title="GUI"></a>GUI</h2><ul>
<li>Xerox<br>Xerox Alto是Xerox PARC（帕洛阿爾托研究中心）<br>於 1970 年代開發的電腦系統<br>Alto 是第一台具有圖形作業系統的計算機，<br>並且基於早期的圖形介面設計而構建<br>Alto並未在商業上取得成功，<br>但它對未來電腦系統的發展產生了重大影響。</li>
</ul>
<img src="https://lh3.googleusercontent.com/-aFvXo1etLt0/WeIvOSeRR5I/AAAAAAABFY8/pijQPWe9tMgO09NlZiceDpn-omuQW90LgCHMYBhgL/w9999/alto-mandelbrot-full.jpg" width="100">

<ul>
<li>APPLE<ul>
<li>Apple II<br>  Apple II 由史蒂夫·沃茲尼亞克設計，<br>  於 1977 年首次推出。<br>  <code>它是第一款廣泛成功的個人電腦之一，</code><br>  <code>具有彩色圖形和擴展槽。(參觀Xerox時學習借鑒)</code><br>  吸引了大量的教育和家庭用戶。<br>  它的開放性設計促進了第三方軟體的發展。</li>
</ul>
  <img src="https://lh3.googleusercontent.com/proxy/0DH7UrhCPbUd-6ejGGvNBBx2DoqE45D6MXy06SVmkSbyxX00a63OSBT0WscA8dNALJhFDxPPm_g">
  - Lisa 1983
      因為史蒂夫·賈伯斯的第一個女兒叫麗莎·布倫南（1978年出生），
      所以通常推斷這個名字也有個人聯想
      該項目始於 1978 年，
      旨在打造一個相對於Apple II
      為代表的傳統設計的更現代版本
      Lisa可說更為先進（同時也更為昂貴），
      `這也具體的表現在許多方面，如內存保護，`
      `協作式多任務處理，基於硬碟的作業系統，`
      `內置的屏幕保護程序，`
      `支援紙帶的先進計算器程序，`
      `支援高達2兆(百萬)字節(即2MB)的內存，`
      `擴充插槽，和一個更大更高的解析度顯示。`
      這些超越時代的設計
      <img src="https://cdn.arstechnica.net/wp-content/uploads/2023/01/steve-jobs-lisa-800x546.jpeg">
      <img src="https://assets.rebelmouse.io/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHBpcmVzX2F0IjoxNzI2NTY2ODQyLCJpbWFnZSI6Imh0dHBzOi8vYXNzZXRzLnJibC5tcy8zMjg3MzAyMi9vcmlnaW4uanBnIn0.P5MIfOn992_AzDWQetHKa2iF9V8IYddLIE-CbnJJPmE/img.jpg" width="70%">
  - Macintosh 1984
      Apple Macintosh（簡稱：Mac）
      `是蘋果公司在1984年所推出的一款個人電腦，`
      `是蘋果公司所推出的第二款採用圖形用戶界面的個人電腦產品，`
      亦是蘋果公司旗下的麥金塔系列電腦中的第一款產品，
      `於1984年1月24日發布`
      在Mac發布後的一段時間內，
      其銷售額曾十分強勁，
      在1984年5月時蘋果公司即售出了70,000台Mac，
      但好景不長，`從1984年下半年開始`，
      Macintosh的銷量便一路下滑，
      到年底的月銷量已跌至萬台以下，
      `導致其在次年10月即告停產`。
      <img src="https://ychef.files.bbci.co.uk/1280x720/p0h6vfmf.jpg" width="70%">
      <img src="https://i.pinimg.com/originals/cc/07/9f/cc079f7a7c7723748534fa97c49d49cd.png" width="70%"></li>
</ul>
<h2 id="硬體架構"><a href="#硬體架構" class="headerlink" title="硬體架構"></a>硬體架構</h2><img src="https://image3.slideserve.com/5808060/slide2-l.jpg" width="70%">

<h3 id="主要元素"><a href="#主要元素" class="headerlink" title="主要元素"></a>主要元素</h3><ul>
<li>中央處理單元（CPU）：<br>  負責執行指令、處理數據。架構設計包括CPU的指令集（如x86、ARM）、處理核心數量及其運作方式（單核、多核、超線程等）。</li>
<li>記憶體架構：<br>  隨機存取記憶體（RAM）：短期存儲數據，提供運行中的程序和系統需要的暫存空間。<br>  快取記憶體（Cache）：臨時存儲經常訪問的數據，加快CPU訪問數據的速度。<br>  主存與次存：<br>  指揮如何管理主存（RAM）與次存（如硬碟、SSD）之間的數據交換。</li>
<li>   總線架構：<br>   連接處理器、記憶體和其他設備的通訊路徑。不同總線（如系統總線、資料總線、地址總線）影響數據的傳輸速度和效率。</li>
<li>   輸入&#x2F;輸出（I&#x2F;O）系統：<br>   硬體如何與外部設備（如鍵盤、螢幕、硬碟）互動，設計影響硬體和外部設備之間的數據交換效率。</li>
<li>   主板（Motherboard）：<br>   整個硬體架構的核心，將所有硬體元件互相連接，並確保它們能有效運作。</li>
</ul>
<h3 id="硬體架構的作用"><a href="#硬體架構的作用" class="headerlink" title="硬體架構的作用"></a>硬體架構的作用</h3><ul>
<li>   性能與效率：<br>   不同的架構設計會直接影響系統的性能。<br>   例如，多核心架構可以提升並行處理能力，<br>   快取記憶體的大小和設計可以加快數據存取速度。</li>
<li><pre><code>兼容性：
  硬體架構必須與軟體系統兼容，
  從指令集架構（ISA）到I/O設備的設計都需與操作系統和應用程序相容。
</code></pre>
</li>
<li>   功耗與散熱：<br>   現代硬體架構中，<br>   功耗管理和散熱設計也是重要考量，<br>   特別是移動設備和伺服器中。</li>
</ul>
<h2 id="CPU-架構"><a href="#CPU-架構" class="headerlink" title="CPU 架構"></a>CPU 架構</h2><img src="https://media.cheggcdn.com/media/5d1/5d13faf4-a7f9-4e63-8d48-8b9760142a6f/phpoHB0Si" width="70%">

<p>Memory Unit（記憶體單元）：</p>
<ul>
<li>元件負責儲存數據和指令，<br>CPU通過與記憶體單元進行數據交換來執行運算。<br>圖中顯示，記憶體單元與累加器（Accumulator）<br>和B寄存器（B Register）進行雙向數據傳輸。</li>
<li>Accumulator（累加器）：<br>累加器是一種寄存器，<br>用來儲存運算的中間結果。<br>它通常是算術或邏輯運算中的主要暫存器，<br>會接收從記憶體單元讀取的數據，<br>並在完成運算後將結果返回到記憶體或繼續進行其他運算。</li>
<li>Logic Circuits（邏輯電路）：<br>邏輯電路是算術邏輯單元中的核心組件，負責進行各種邏輯運算（如與、或、非、異或等）和算術運算（如加法、減法）。它會從累加器和B寄存器中接收數據，並執行指令。</li>
<li>B Register（B寄存器）：<br>B寄存器是另一個暫存器，通常用來存放第二個運算數。與累加器配合，B寄存器可以存放需要與累加器中的值進行運算的數據。</li>
<li>Control Unit（控制單元）：<br>控制單元負責指揮整個CPU的運作，<br>發送控制信號來調度ALU進行各項運算。<br>控制單元指揮累加器、B寄存器和邏輯電路進行相應操作，<br>並與記憶體單元交互數據。</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>進位制</title>
    <url>/2024/09/12/%E9%80%B2%E4%BD%8D%E5%88%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="電腦的組成"><a href="#電腦的組成" class="headerlink" title="電腦的組成"></a>電腦的組成</h1><h1 id="進位"><a href="#進位" class="headerlink" title="進位"></a>進位</h1><ul>
<li><p>十進制<br>生活中的進位制是十進制，這種進位制通常使用10個阿拉伯數字（即 0-9 ）進行記數<br>0 1 2 3 4 5 6 7 8 9 10</p>
</li>
<li><p>二進制<br>幾乎所有的電子計算機內部都使用二進位制，分別為「0」和「1」表示「關」和「開」。用於大多數電子計數器。<br>0 1 10 11 100 101 110 111 1000 1001 1010 1011</p>
</li>
<li><p>十六進制	<br>經常用於計算機領域，2到4次冪。十六位數字為「0-9」，接著是「A-F」。<br>0 1 2 3 4 5 6 7 8 9 A B C D E F 10</p>
</li>
</ul>
<h2 id="10進位轉2進位"><a href="#10進位轉2進位" class="headerlink" title="10進位轉2進位"></a>10進位轉2進位</h2><p>67(十進位) </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">67÷2 = 33...1</span><br><span class="line">33÷2 = 16...1</span><br><span class="line">16÷2 = 8....0</span><br><span class="line">8÷2 = 4...0</span><br><span class="line">4÷2 = 2...0</span><br><span class="line">2÷2 = 1...0</span><br><span class="line">1÷2 = 0...1</span><br></pre></td></tr></table></figure>
<p>所以二進制就是 1000011</p>
<h2 id="2進位轉16進位"><a href="#2進位轉16進位" class="headerlink" title="2進位轉16進位"></a>2進位轉16進位</h2><p>10110011</p>
<p>先拆解數字<br>1011與0011</p>
<p>1011 &#x3D; B<br>0011 &#x3D; 3</p>
<p>所以10110011 &#x3D; B3</p>
<h1 id="2進位轉成10進位"><a href="#2進位轉成10進位" class="headerlink" title="2進位轉成10進位"></a>2進位轉成10進位</h1><p>1101<br>就如我們小時候學的數學一樣</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">千 百 十 個</span><br><span class="line">1  1  0  1</span><br></pre></td></tr></table></figure>

<p>個 2^0 * 1 &#x3D; 1<br>十 2^1 *0 &#x3D; 0<br>百 2^2 *1 &#x3D; 4<br>千 2^3 *1 &#x3D; 8</p>
<p>1+0+4+8 &#x3D; 13</p>
<p>1101(二進制) 的十進制就是 13(十進制)</p>
<hr>
<h2 id="title-計算機概論6date-2024-10-16-08-58-19tags"><a href="#title-計算機概論6date-2024-10-16-08-58-19tags" class="headerlink" title="title: 計算機概論6date: 2024-10-16 08:58:19tags:"></a>title: 計算機概論6<br>date: 2024-10-16 08:58:19<br>tags:</h2><h1 id="overflow-溢位"><a href="#overflow-溢位" class="headerlink" title="overflow 溢位"></a>overflow 溢位</h1><p>七進制舉例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">    <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1.</span>   +<span class="number">7</span></span><br><span class="line"></span><br><span class="line">“+” <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1.</span>   +<span class="number">7</span></span><br><span class="line">-----------------</span><br><span class="line">    <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>第四位數如果原本是正數加完之後如果變成負數就是超過表示範圍</p>
<p>1001  →  0110 → 0111</p>
<p>補數可以說是將數值變成負數</p>
<p>1001 &#x3D; -7</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> <span class="number">1001</span> = -<span class="number">7</span></span><br><span class="line"></span><br><span class="line">+<span class="number">1001</span> = -<span class="number">7</span></span><br><span class="line">-------</span><br><span class="line"> <span class="number">00</span>10</span><br></pre></td></tr></table></figure>

<p>一個負數加一個負數 &#x3D; 正數 &#x3D; overflow</p>
<p>一個正數加一個正數 &#x3D; 負數 &#x3D; overflow</p>
<h1 id="練習"><a href="#練習" class="headerlink" title="練習"></a>練習</h1><p>11100110 十進制答案</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">11100110</span> -&gt; 00011001 （一的補數）-&gt; 00011010 （二的補數）= -<span class="number">26</span> </span><br></pre></td></tr></table></figure>

<ul>
<li><p><strong>解釋</strong></p>
<p>  <strong>原始二進制數：</strong></p>
<p>  •    11100110</p>
<p>  這是一個 8 位的二進制數，表示它是用來表示一個 <strong>有符號的數字</strong>，其中最高位（最左邊的 1）是符號位。當最高位是 1 時，這個數是負數；當最高位是 0 時，這個數是正數。</p>
<p>  <strong>2. 求一的補數：</strong></p>
<p>  •    將每個位的數字反轉，將 1 變成 0，0 變成 1。</p>
<p>  •    原數字是 11100110，它的一的補數是 00011001。</p>
<p>  <strong>3. 求二的補數：</strong></p>
<p>  •    在一的補數基礎上加上 1。</p>
<p>  •    00011001 + 1 &#x3D; 00011010。</p>
<p>  <strong>4. 將二進制數轉換為十進制數：</strong></p>
<p>  •    現在，我們已經得到了 00011010，它是二的補數形式，用來表示負數。</p>
<p>  •    00011010 &#x3D; 26（十進制）。</p>
</li>
</ul>
<h2 id="檢查碼"><a href="#檢查碼" class="headerlink" title="檢查碼"></a>檢查碼</h2><ul>
<li>例如身份字號F233456789</li>
<li>其中F代表地區</li>
<li>剩下七個數字為流水號</li>
</ul>
<h2 id="Big-5編碼規則（可變長度編碼）"><a href="#Big-5編碼規則（可變長度編碼）" class="headerlink" title="Big - 5編碼規則（可變長度編碼）"></a>Big - 5編碼規則（可變長度編碼）</h2><ul>
<li>兩個byte代表一個漢字</li>
<li>想辦法與英文字母相容</li>
</ul>
<p>分首碼次碼，高位元的在前面</p>
<p><img src="https://idv.sinica.edu.tw/bear/charcodes/images/fig9-2.gif" alt="cscl.png"></p>
<h3 id="舉例：big-5-cont’"><a href="#舉例：big-5-cont’" class="headerlink" title="舉例：big-5 (cont’)"></a>舉例：big-5 (cont’)</h3><ul>
<li><p>0  一   Ａ4440</p>
</li>
<li><p>1  乙    A4440</p>
</li>
<li><p>3  丁    A4440</p>
</li>
<li><p>5400 籲 C67E</p>
</li>
<li><p>5401 乂 C940</p>
</li>
<li><p>5402 乜 C941</p>
</li>
<li><p>5403 凵 C942</p>
</li>
<li><p>5404 匚 C943</p>
</li>
<li><p>5405 厂 C944</p>
</li>
<li><p>5406 万 C945</p>
</li>
<li><p>5407 丌 C946</p>
</li>
</ul>
<p><a href="https://web.tnu.edu.tw/me/study/moodle/tutor/vb6/tutor/r05/index.htm">https://web.tnu.edu.tw/me/study/moodle/tutor/vb6/tutor/r05/index.htm</a></p>
<p>其中有 408 個符號和所謂常用字 5401 個,<br>次常用字 7652 個</p>
<h2 id="輸入法"><a href="#輸入法" class="headerlink" title="輸入法"></a>輸入法</h2><ul>
<li>字音輸入法<ul>
<li>注音</li>
<li>拼音</li>
</ul>
</li>
<li>字型輸入法<ul>
<li>倉頡</li>
<li>大易</li>
</ul>
</li>
</ul>
<p>假如在鍵盤上我們可以應用的按件數是n</p>
<p>則n個鍵可以組成</p>
<p>$ n +n^2+n^3+…..</p>
<h3 id="舉例"><a href="#舉例" class="headerlink" title="舉例"></a>舉例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0 1 1 0  ———&gt;  6</span><br><span class="line"></span><br><span class="line">1  1 1 0 ———&gt;   -6</span><br><span class="line"></span><br><span class="line">0 0 0 0 ——→     0</span><br><span class="line"></span><br><span class="line">1  0 0 0 ———&gt;  -0 [x]</span><br><span class="line"></span><br><span class="line">加法</span><br><span class="line"></span><br><span class="line">     0  1   1   0</span><br><span class="line"></span><br><span class="line">+   1   1   1   0</span><br><span class="line">--------------------</span><br><span class="line"></span><br><span class="line">	0   1   0   0</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>上面是錯誤的</p>
<p>每個輸入法都有規則，開頭的第一位是1就是負數0就是正數</p>
<p>也可以用2的補數表去計算</p>
<h3 id="正確"><a href="#正確" class="headerlink" title="正確"></a>正確</h3><p>1   1   0  1 舉例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1101  2進位轉成 10進位</span><br><span class="line"></span><br><span class="line">1 1 0 1 前面第一個是1 代表示負數</span><br><span class="line"></span><br><span class="line">所以要取二的補數</span><br><span class="line"></span><br><span class="line">1 1 0 1  → 0 0 1 0 = 一的補數第一位再加一 = 2 的補數</span><br><span class="line"></span><br><span class="line">0 0 1 0</span><br><span class="line">+     1</span><br><span class="line">--------</span><br><span class="line">0 0 1 1 (2進位） =  - 3(十進位）</span><br></pre></td></tr></table></figure>

<p>轉換後之後記得加上負號</p>
<p>-7 寫出2的補數表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7 = 0111</span><br><span class="line"></span><br><span class="line">0111 → 1000 = 一的補數再加一 = 二的補數  = 1001(二的補數）</span><br></pre></td></tr></table></figure>

<p>1 0 0 0的補數  &#x3D; 1 0 0 0</p>
<p>為什麼？</p>
<ul>
<li>因為在4位2進制下多出來的會被拋棄</li>
</ul>
<p>4位補數的範圍</p>
<table>
<thead>
<tr>
<th>二進制</th>
<th>十進制</th>
<th>說明</th>
</tr>
</thead>
<tbody><tr>
<td><code>0000</code></td>
<td>0</td>
<td>正數 0</td>
</tr>
<tr>
<td><code>0001</code></td>
<td>+1</td>
<td>正數 1</td>
</tr>
<tr>
<td><code>0010</code></td>
<td>+2</td>
<td>正數 2</td>
</tr>
<tr>
<td><code>0011</code></td>
<td>+3</td>
<td>正數 3</td>
</tr>
<tr>
<td><code>0100</code></td>
<td>+4</td>
<td>正數 4</td>
</tr>
<tr>
<td><code>0101</code></td>
<td>+5</td>
<td>正數 5</td>
</tr>
<tr>
<td><code>0110</code></td>
<td>+6</td>
<td>正數 6</td>
</tr>
<tr>
<td><code>0111</code></td>
<td>+7</td>
<td>正數 7</td>
</tr>
<tr>
<td><code>1000</code></td>
<td>-8</td>
<td>負數 -8，特殊情況</td>
</tr>
<tr>
<td><code>1001</code></td>
<td>-7</td>
<td>負數 -7</td>
</tr>
<tr>
<td><code>1010</code></td>
<td>-6</td>
<td>負數 -6</td>
</tr>
<tr>
<td><code>1011</code></td>
<td>-5</td>
<td>負數 -5</td>
</tr>
<tr>
<td><code>1100</code></td>
<td>-4</td>
<td>負數 -4</td>
</tr>
<tr>
<td><code>1101</code></td>
<td>-3</td>
<td>負數 -3</td>
</tr>
<tr>
<td><code>1110</code></td>
<td>-2</td>
<td>負數 -2</td>
</tr>
<tr>
<td><code>1111</code></td>
<td>-1</td>
<td>負數 -1</td>
</tr>
</tbody></table>
<h3 id="表達範圍"><a href="#表達範圍" class="headerlink" title="表達範圍"></a>表達範圍</h3><p>4 bits &#x3D; +7 ~ -8</p>
<p>&#x3D; +2^(4-1) -1 ~ -2(4-1)</p>
<p>n bits &#x3D; +2^(n-1) -1  ~ -2^(n-1)</p>
]]></content>
      <tags>
        <tag>計算機概論</tag>
      </tags>
  </entry>
</search>
