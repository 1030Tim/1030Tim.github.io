<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>python程式設計</title>
    <url>/2025/01/31/python%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>有錯誤麻煩拜託寫信給 <a href="mailto:&#x6a;&#117;&#x6e;&#50;&#48;&#48;&#x36;&#49;&#x30;&#51;&#48;&#x40;&#103;&#109;&#x61;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;">jun20061030@gmail.com</a><br>或填寫此表單 <a href="https://forms.gle/8ba6PxkGUZME6V6X6">https://forms.gle/8ba6PxkGUZME6V6X6</a><br><a href="https://forms.gle/8ba6PxkGUZME6V6X6">連結</a></p>
<h1 id="pythont程式設計"><a href="#pythont程式設計" class="headerlink" title="pythont程式設計"></a>pythont程式設計</h1><ul>
<li>作者：Juhn Chen (宇桐）</li>
</ul>
<hr>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="學習目標"><a href="#學習目標" class="headerlink" title="學習目標"></a>學習目標</h3><ul>
<li>學習python的基本語法與邏輯</li>
<li>交叉學習C++與python減少知識落差</li>
<li>實作解題</li>
</ul>
<h3 id="章節"><a href="#章節" class="headerlink" title="章節"></a>章節</h3><ol>
<li>python是什麼</li>
<li>基本運算與變數<ul>
<li>區域變數與全域變數</li>
</ul>
</li>
<li>值的型別</li>
<li>條件判斷與迴圈</li>
<li>陣列與串列</li>
<li>函式與演算法入門</li>
</ol>
<h3 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h3><ul>
<li>IDE：python3 &#x2F; Visual Studio Code</li>
<li>解題平台：ZeroJudge</li>
</ul>
<h3 id="為什麼要學習程式？"><a href="#為什麼要學習程式？" class="headerlink" title="為什麼要學習程式？"></a>為什麼要學習程式？</h3><p>學習程式設計時，擁有明確的學習目標至關重要。當面臨困難時，清楚的學習動機能夠幫助你堅持下去，而不會輕易放棄。</p>
<h3 id="Python-可以做什麼？"><a href="#Python-可以做什麼？" class="headerlink" title="Python 可以做什麼？"></a>Python 可以做什麼？</h3><p>Python 是一種功能強大的程式語言，應用領域廣泛，包括但不限於：</p>
<ul>
<li><p>基本運算與自動化處理</p>
</li>
<li><p>物件導向程式設計</p>
</li>
<li><p>數據分析與視覺化</p>
</li>
<li><p>機器學習與人工智慧</p>
</li>
</ul>
<h3 id="python3-跟-C-的差別"><a href="#python3-跟-C-的差別" class="headerlink" title="python3 跟 C++的差別"></a>python3 跟 C++的差別</h3><ol>
<li>強制型 vs. 動態型：</li>
<li>解釋執行 vs. 編譯執行</li>
</ol>
<h4 id="強制型與動態型"><a href="#強制型與動態型" class="headerlink" title="強制型與動態型"></a>強制型與動態型</h4><p>C++</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">5</span>;</span><br><span class="line">    <span class="type">float</span> b = <span class="number">7.0</span>;</span><br><span class="line">    <span class="type">char</span> c = <span class="string">&#x27;h&#x27;</span>;</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; b &lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt; c &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>python</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">c = <span class="string">&quot;Hello World&quot;</span></span><br><span class="line"><span class="built_in">print</span>(a,b,c,sep=<span class="string">&quot; &quot;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>C++ 是編譯型語言：<br>  將整個程式碼翻譯成機器語言後再執行。</li>
<li>Python 是直譯型語言：<br>  一行行讀取程式碼並即時執行。</li>
</ul>
<p>由於編譯型語言在執行前已經將整個程式轉換為機器語言，<br>因此 C++ 通常比 Python 更快速。</p>
<p>程式語言的運作方式<br>機器所理解的語言叫 機器碼，<br>是二進位制的（只有 0 和 1），我們稱之為<strong>低階語言</strong>。</p>
<p>我們所學的語言屬於<strong>高階語言</strong>，透過環境中的<strong>編譯</strong> 或<strong>解譯</strong><br>轉換成<strong>中級語言</strong>，稱為<strong>組合語言</strong>，最終再編譯成<strong>機器語言</strong>。</p>
<h1 id="環境安裝"><a href="#環境安裝" class="headerlink" title="環境安裝"></a>環境安裝</h1><p>✅ 安裝 Python3：<br>官方網站下載：<br><a href="https://www.python.org/">python官網</a><br>✅ 安裝 VS Code：<br>官方網站下載：Visual Studio Code<br><a href="https://code.visualstudio.com/">Visual Studio Code官網</a><br>✅ 確認 Python 版本：<br>Mac用戶</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">python3 --version</span><br></pre></td></tr></table></figure>
<p>Windos用戶</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">pthon --version</span><br></pre></td></tr></table></figure>
<p>代更新…2025&#x2F;1&#x2F;31</p>
]]></content>
  </entry>
  <entry>
    <title>swiftUI ios製作回顧</title>
    <url>/2024/08/31/swiftUI-ios%E8%A3%BD%E4%BD%9C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SwiftUI-Ios"><a href="#SwiftUI-Ios" class="headerlink" title="SwiftUI Ios"></a>SwiftUI Ios</h1><h2 id="語法介紹"><a href="#語法介紹" class="headerlink" title="語法介紹"></a>語法介紹</h2><ul>
<li>Vstack{ } 垂直堆疊</li>
</ul>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">VStack</span> &#123;</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;Hello&quot;</span>)</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;World&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>將兩個文字上下垂直疊起來<br>變成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello</span><br><span class="line">World</span><br></pre></td></tr></table></figure>
<ul>
<li>Hstack{ }  水平堆疊</li>
</ul>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">HStack</span> &#123;</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;Hello&quot;</span>)</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;World&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>文字左右堆疊<br>變成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello Wold</span><br></pre></td></tr></table></figure>
<ul>
<li>Zstack{ } 重疊</li>
</ul>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">ZStack</span> &#123;</span><br><span class="line">    <span class="type">Image</span>(<span class="string">&quot;background&quot;</span>)</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;Overlay text&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>兩個圖層疊在一起</p>
<ul>
<li>image() 用來渲染圖片，通常是來自資源文件或 URL 的圖片。</li>
</ul>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="type">Image</span>(<span class="string">&quot;exampleImage&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>自主學習</category>
      </categories>
  </entry>
  <entry>
    <title>感謝生命中的你</title>
    <url>/2024/09/01/%E6%84%9F%E8%AC%9D%E7%94%9F%E5%91%BD%E4%B8%AD%E7%9A%84%E4%BD%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="有感而發想，想對幾位貴人說聲謝謝–1130902"><a href="#有感而發想，想對幾位貴人說聲謝謝–1130902" class="headerlink" title="有感而發想，想對幾位貴人說聲謝謝–1130902"></a>有感而發想，想對幾位貴人說聲謝謝–1130902</h1><ul>
<li><p>葉Ｏ銘教練<br>感謝您的出現、願意破格教一個沒運動底子的人學撐竿跳高！<br>因為有您的教授技術以及種種鞭策<br>讓我一直熱情不減的想會撐竿跳高給我的奧妙<br>我愛撐竿跳高 很愛 很愛<br><br>因為您不放棄我，所以我才能繼續訓練，繼續突破自己！<br>我深知不是您最耀眼的那顆星<br>先天沒運動細胞 卻有後天凡夫俗子的干擾<br>但我會一點一點進步<br>越是不可能，我就越有繼續努力的機會<br>所以，教練 真的很謝謝您！<br>之後還請您多多指教</p>
</li>
<li><p>歐Ｏ雄老師<br>感謝您一直不斷的指導我許多專題報告、資料的製作<br>不厭其煩重複聽我報告又報告<br>不斷的修正我的種種不OK<br>因為有老師的指導與調整<br>我不怯場、漸漸知道一些小眉角<br>佔用您許多寶貴時間<br>今天忽然想付諸文字告訴您<br>「有您真好」、「謝謝您」<br>當然<br>面臨關鍵時刻的逼近<br>我必須展現我的「會跟」<br>希望得到您的題點指導<br>謝謝您</p>
</li>
</ul>
<p>哎呀<br>開學第二天<br>看似沒變卻不一樣了<br>看似變了但又還是一樣<br>所以<br>寫下這謝感言<br>還有很多善知識貴人在幫助我<br>也都謝謝你們<br><del>未完</del></p>
]]></content>
      <categories>
        <category>撐竿跳系列</category>
      </categories>
  </entry>
  <entry>
    <title>回顧持竿助跑與成績之關聯 高二下</title>
    <url>/2024/08/31/%E6%8C%81%E7%AB%BF%E5%8A%A9%E8%B7%91%E8%88%87%E6%88%90%E7%B8%BE%E4%B9%8B%E9%97%9C%E8%81%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="自助學習過程與說明"><a href="#自助學習過程與說明" class="headerlink" title="自助學習過程與說明"></a>自助學習過程與說明</h1><h2 id="回顧一下高二實做的點點滴滴"><a href="#回顧一下高二實做的點點滴滴" class="headerlink" title="回顧一下高二實做的點點滴滴"></a>回顧一下高二實做的點點滴滴</h2><p>⬇️製作過程及影片<br><br><br><video controls autoplay muted width="100%" height="auto"><br>  <source src="/video/study-process-summary.mp4" type="video/mp4"><br>  Your browser does not support the video tag.<br></video><br><br><br><br><br><br></p>
<h2 id="ppt發表"><a href="#ppt發表" class="headerlink" title="ppt發表"></a>ppt發表</h2><iframe src="https://drive.google.com/file/d/1i1QTspB7CuqAhdsL-nv8IIkh0SgxPHAv/preview" width="100%" height="600px"></iframe>

<p>榮幸代表學校前往參加屏一區自主學習共好計畫</p>
<p>過程中非常的緊張</p>
<h2 id="動機"><a href="#動機" class="headerlink" title="動機"></a>動機</h2><p>某次練習中，看到教練正指導著初入門的學弟撐竿跳高基本動作，<br>學弟的表情卻顯得一副茫然；那一幕極像當年懵懂的我，<br>總在每一次的「感覺」中體會教練所指的「再如何一點、如何一點」，<br>孰不知差之毫釐，失之千里！<br>撐竿跳高的「技術」如同畫家在作畫時的「筆觸」般，都是很「抽象的感覺」。<br>哪怕以詳細的文字描述，仍存在著每個人身體條件及個人理解力的不同，<br>而需將這種抽象感累積而成。</p>
<p>在棒球運動中，投手的每個動作都可以被「數據化」，<br>每個細節都會影響到最終的投球軌跡。<br>那麼，撐竿跳高呢？這項運動由12個動作組成，<br>而從一開始的持竿助跑來看，<br>持竿助跑動作是否與成績有直接的關聯呢？</p>
]]></content>
      <categories>
        <category>自主學習</category>
      </categories>
  </entry>
  <entry>
    <title>機器學習</title>
    <url>/2024/09/02/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密碼不太對" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="574f93c7fada62b2fa8031b1a1a83a323a9fd46aa83ba0431129a3c6ec9985ab"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好文章未完成，請輸入密碼查看.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>知識</category>
      </categories>
  </entry>
  <entry>
    <title>撐竿跳高介紹</title>
    <url>/2024/08/31/%E6%92%90%E7%AB%BF%E8%B7%B3%E9%AB%98%E4%BB%8B%E7%B4%B9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="簡介-文獻"><a href="#簡介-文獻" class="headerlink" title="簡介 -  文獻"></a>簡介 -  文獻</h2><p>在田徑跳步運動中撐竿跳高運動是唯一使用器具，<br>也是最具難度、複雜性與技巧性的項目<br>（王代才、張武記，1994;Morlier,J.&amp;Cid,M.,1996;Bussabarger,2001）。<br>自從1817年開始採用木質跳竿創造第一成績後，<br>經歷竹竿、鋁竿、尼龍竿與石墨纖維竿等，<br>直到1962年才改用玻璃纖維竿<br>（游正忠，2008）。<br>優越的物理特性，使竿子更加輕便、彈力更大、韌性強、握感好<br>（李北玉，2001；孫南，2006）<br>撐竿跳高運動是田徑運動項目中困難度最高，<br>也是亞洲運動會和奧林匹克運動會競賽中，<br>在教學和訓練上需要經過細膩且完整的動作分析過後逐步進行<br>（謝佳翰，2019）。<br>其動作包括持竿、助跑、插竿、起跳、<br>弓身、擺體、捲體、伸展、轉身、<br>倒立、推竿（過竿）及後仰等十二個環節<br>（葉健銘，2022）。<br>這十二個動作需在約十秒內完成，<br>每一個動作都環環相扣因此。<br>與其他跳躍項目的助跑不同，撐竿跳高的助跑過程中，<br>選手需在負重情況下維持最高且可控的助跑速度，<br>這將直接影響最終的成績<br>（謝佳翰，2019）。<br>在人-竿相互作用的結合下，將人體拋向更高越過橫桿，<br>也就是將動能轉變為位能的過程，這是一個技術複雜，<br>且困難性高的項目，<br>所以選手必須擁有較高的水平速度、跳躍及體操技巧的能力<br>（Linthorne，2000）。</p>
<p><code>在台灣，男子撐竿跳高的紀錄為：5公尺38公分（林志成，2024年創下)</code><br><code>而國際撐竿跳高男子紀錄則為：6公尺26公分（Mondo Duplantis，2024年)</code></p>
<iframe 
    width="auto" 
    height="auto" 
    src="https://www.youtube.com/embed/U0GnAT-gMhk?si=E5Sr2PJWWdWOuUnd" 
    frameborder="0" 
    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
    allowfullscreen>
</iframe>

<h2 id="說明"><a href="#說明" class="headerlink" title="說明"></a>說明</h2><p>2024-09-02 待更新</p>
]]></content>
      <categories>
        <category>撐竿跳系列</category>
      </categories>
  </entry>
  <entry>
    <title>計算機歷史</title>
    <url>/2024/09/04/%E8%A8%88%E7%AE%97%E6%A9%9F%E6%AD%B7%E5%8F%B2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="初入計算機概論"><a href="#初入計算機概論" class="headerlink" title="初入計算機概論"></a>初入計算機概論</h1><p>計算機概論是所有電腦的基礎</p>
<p><del>如果你是國文系的最好修計算機概論</del><br><del>如果你是歷史系的最好修計算機概論</del></p>
<h2 id="快速進入"><a href="#快速進入" class="headerlink" title="快速進入"></a>快速進入</h2><h3 id="計算"><a href="#計算" class="headerlink" title="計算"></a>計算</h3><ul>
<li><p>希臘阿基米德以極限求圓面積</p>
</li>
<li><p>羅馬</p>
<ul>
<li>羅馬數字：非對位系統</li>
<li>羅馬幾乎失聯了所有的希臘知識</li>
<li>例如他們不知道希臘已經認證的地球是個圓形</li>
</ul>
</li>
<li><p>阿拉伯</p>
<ul>
<li>大量的翻譯希臘文獻</li>
<li>阿拉伯 採借了印度的數字符號</li>
</ul>
</li>
<li><p>歐洲</p>
<ul>
<li>展開了 十字軍東征 的侵略掠奪得到的寶貝<ul>
<li>譯成阿拉伯文的希臘文明遺產</li>
<li>十進制阿拉伯數字與計算法</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="計算機始的重要人物"><a href="#計算機始的重要人物" class="headerlink" title="計算機始的重要人物"></a>計算機始的重要人物</h3><ul>
<li>Blaise Pascal(1623 - 1662)</li>
</ul>
<p><img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT49lr-AocEsoaTAGI7SE0Zhh-21wZhp20cdA&s"></p>
<p>在11歲時自行發展歐氏幾何，並證明「三角形內角和為 180°」<br>Pascal在19歲到21歲為了幫助父親課稅，發明了堪稱史上最早的計算機械。<br>Pascal 24歲，開始進行大氣壓力的實驗， 並發現大氣壓力隨海拔增高而減少的事實，並由此得到大氣層外必為真空的結論，</p>
<ul>
<li>Charles Babbage (1791–1871 )</li>
</ul>
<img src="https://media.hswstatic.com/eyJidWNrZXQiOiJjb250ZW50Lmhzd3N0YXRpYy5jb20iLCJrZXkiOiJnaWZcL3doby1pbnZlbnRlZC1jb21wdXRlci0yLmpwZyIsImVkaXRzIjp7InJlc2l6ZSI6eyJ3aWR0aCI6ODI4fX19" width="50%" >
英國數學家、發明家兼機械工程師。由於提出了差分機與分析機的設計概念，被視為電腦先驅。

<ul>
<li>Augusta Ada Byron (1815-1852)</li>
</ul>
<p>她是第一位主張計算機不只可以用來算數的人，<br>也發表了第一段分析機用的演算法。因此，<br>愛達常被公認為史上第一位程式設計師。</p>
<img src="https://www.lookfar.com/wp-content/uploads/2017/06/ada-image-bates-blog-1024x683.jpg" width="50%">

<ul>
<li>Mark I (Howard Aikan )1943<br>是美國第一部大尺度自動數位電腦，被認為是第一部萬用型計算機。<br>它的生產和設計者（IBM）給它起的名字是全自動化循序控制計算機<br>，哈佛一型是它的使用者哈佛大學給它起的名字。<br>哈佛一型是第一部被實作出來的全自動電腦，<br>同時與當年的其他電子式電腦相比它非常可靠。<br>大家認為「這是現代電腦時代的開端」以及「真正的電腦時代的曙光」。</li>
</ul>
<img src="https://www.thoughtco.com/thmb/b6GQkWD-BBjPRJ1wlEY2mCQtpDY=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/GettyImages-107636032-293dc66802a54c4685892d2bb7831ef5.jpg" width="50%">

<img src="https://www.digikey.tw/-/media/Images/Article%20Library/TechZone%20Articles/2023/October/An%20Introduction%20to%20Relays/article-2023october-an-introduction-to-relays-fig1.jpg?la=en&ts=a2098369-75cf-4d24-bce6-6d4e008a5421" width="50%">

<p>第一台利用繼電器取代電腦</p>
<ul>
<li>Grace Hopper (1906-1992)</li>
</ul>
<p>全世界第一套的compiler: A-0</p>
<ul>
<li>第一個bug</li>
</ul>
<p>1947 年 9 月 9 日，<br>哈佛大學 Mark II 電腦的一名工程師團隊記錄了第一個實際的電腦「錯誤」<br>一隻飛蛾卡在機器的繼電器之間。記錄於 15:45，錯誤昆蟲的遺骸被貼在頁面上，<br>上面寫著：</p>
<img src="https://www.computinghistory.org.uk/userdata/images/large/13/42/product-111342.jpg" width="50%">
“發現錯誤的第一個實際案例。”

<p>電腦先驅格蕾絲·霍珀 (Grace Hopper)是哈佛 Mark II 團隊的成員，<br>但史密森學會指出，該日誌可能不是霍珀的。然而，她很可能幫助這件事變得出名。</p>
<ul>
<li>ENIAC (計算彈道)1946</li>
</ul>
<p>世界上第一部可變程式的電子計算機<br>透過插孔改變指令</p>
<img src="https://s314.siliconimg.com/kb/content_images/2022/02/14/2146963/1644824448_240.jpg?imageView2/2/w/600" >

<ul>
<li>John von Neumann (1903-1957)</li>
</ul>
<p>內儲程式的計算機(程式與資料都儲存<br>在電腦裡面 )IAS computer</p>
<ul>
<li>Neumann 架構</li>
</ul>
<img src="https://files.codingninjas.in/article_images/von-neumann-architecture-1-1710223594.webp" width="50%">

<p>類似list一條list儲存多種資料</p>
<ul>
<li>Alan Turing</li>
</ul>
<p>他被譽為電腦科學與人工智慧之父。<br>二次世界大戰期間，「Hut 8」小組，<br>負責德國海軍密碼分析。 期<br>間他設計了一些加速破譯德國密碼的技術，<br>包括改進波蘭戰前研製的機器Bombe，<br>一種可以找到恩尼格瑪密碼機設定的機電機器<br><img src="https://www.scienceshot.com/wp-content/uploads/2024/06/turing1-jpg.webp" width="50%"></p>
<p>圖靈機，又稱確定型圖靈機，<br>是英國數學家艾倫·圖靈<br>於1936年提出的一種將人的計算行為抽象化的數學邏輯機，<br>其更抽象的意義為一種計算模型，<br>可以看作等價於任何有限邏輯數學過程的終極強大邏輯機器</p>
<h2 id="打字機"><a href="#打字機" class="headerlink" title="打字機"></a>打字機</h2><ul>
<li>QWERTY<br>音譯：科蒂鍵盤，是各國通用的現今流行的鍵盤組合<br>由1867年10月提出的專利<br>QWERTY鍵盤安排次序的原則是<br>為了要減少打字機在打字時連<br>動杆之間的擠壓及故障發生率的狀況，<br>因而要把常用字母隔開</li>
</ul>
<p>白話點：<br><code>是為了讓打字速度不要那麼快</code><br><code>避免打字機故障</code></p>
<p>但現今技術以解決這項問題<br>QWERTY組合卻早已廣為流傳<br>所以是無法輕易改變的</p>
<ul>
<li>Dvorak<br>在1930年代期間設計，<br>是主流鍵盤排列QWERTY鍵盤的競爭對手</li>
</ul>
<img src="https://dvorak-keyboard.com/wp-content/uploads/dvorakkb.png" width = "400">
德沃夏克和迪力在研究過字母頻率和手的生理結構之後，
依以下的宗旨設計了這種鍵盤的排列方式

<ul>
<li>電傳打字機</li>
</ul>
<img src="https://www.cmm.gov.mo/images/exhibits/2_5_4_1_chi.png" width="400">

<p>1949年8月16日台灣正式使用<br>遠距離列印交換的編寫形式。<br>電傳既具有電話的快速，<br>又具有打字機的準確，<br>尤其是當電文中有資料時，<br>這種優點表現得特別明顯。<br>人們普遍認為，<br>電傳這種通訊方式，<br>除了具備高效性和精確性之外，<br>還比電報和電話更為便宜。<br>電傳是在傳真機普遍使用以前的通訊裝置，<br>其原理有點近似電報</p>
<p>例如說：<code>我在屏東打字，字會顯示在台北的機器上</code></p>
<h2 id="GUI"><a href="#GUI" class="headerlink" title="GUI"></a>GUI</h2><ul>
<li>Xerox<br>Xerox Alto是Xerox PARC（帕洛阿爾托研究中心）<br>於 1970 年代開發的電腦系統<br>Alto 是第一台具有圖形作業系統的計算機，<br>並且基於早期的圖形介面設計而構建<br>Alto並未在商業上取得成功，<br>但它對未來電腦系統的發展產生了重大影響。</li>
</ul>
<img src="https://lh3.googleusercontent.com/-aFvXo1etLt0/WeIvOSeRR5I/AAAAAAABFY8/pijQPWe9tMgO09NlZiceDpn-omuQW90LgCHMYBhgL/w9999/alto-mandelbrot-full.jpg" width="100">

<ul>
<li>APPLE<ul>
<li>Apple II<br>  Apple II 由史蒂夫·沃茲尼亞克設計，<br>  於 1977 年首次推出。<br>  <code>它是第一款廣泛成功的個人電腦之一，</code><br>  <code>具有彩色圖形和擴展槽。(參觀Xerox時學習借鑒)</code><br>  吸引了大量的教育和家庭用戶。<br>  它的開放性設計促進了第三方軟體的發展。</li>
</ul>
  <img src="https://lh3.googleusercontent.com/proxy/0DH7UrhCPbUd-6ejGGvNBBx2DoqE45D6MXy06SVmkSbyxX00a63OSBT0WscA8dNALJhFDxPPm_g">
  - Lisa 1983
      因為史蒂夫·賈伯斯的第一個女兒叫麗莎·布倫南（1978年出生），
      所以通常推斷這個名字也有個人聯想
      該項目始於 1978 年，
      旨在打造一個相對於Apple II
      為代表的傳統設計的更現代版本
      Lisa可說更為先進（同時也更為昂貴），
      `這也具體的表現在許多方面，如內存保護，`
      `協作式多任務處理，基於硬碟的作業系統，`
      `內置的屏幕保護程序，`
      `支援紙帶的先進計算器程序，`
      `支援高達2兆(百萬)字節(即2MB)的內存，`
      `擴充插槽，和一個更大更高的解析度顯示。`
      這些超越時代的設計
      <img src="https://cdn.arstechnica.net/wp-content/uploads/2023/01/steve-jobs-lisa-800x546.jpeg">
      <img src="https://assets.rebelmouse.io/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHBpcmVzX2F0IjoxNzI2NTY2ODQyLCJpbWFnZSI6Imh0dHBzOi8vYXNzZXRzLnJibC5tcy8zMjg3MzAyMi9vcmlnaW4uanBnIn0.P5MIfOn992_AzDWQetHKa2iF9V8IYddLIE-CbnJJPmE/img.jpg" width="70%">
  - Macintosh 1984
      Apple Macintosh（簡稱：Mac）
      `是蘋果公司在1984年所推出的一款個人電腦，`
      `是蘋果公司所推出的第二款採用圖形用戶界面的個人電腦產品，`
      亦是蘋果公司旗下的麥金塔系列電腦中的第一款產品，
      `於1984年1月24日發布`
      在Mac發布後的一段時間內，
      其銷售額曾十分強勁，
      在1984年5月時蘋果公司即售出了70,000台Mac，
      但好景不長，`從1984年下半年開始`，
      Macintosh的銷量便一路下滑，
      到年底的月銷量已跌至萬台以下，
      `導致其在次年10月即告停產`。
      <img src="https://ychef.files.bbci.co.uk/1280x720/p0h6vfmf.jpg" width="70%">
      <img src="https://i.pinimg.com/originals/cc/07/9f/cc079f7a7c7723748534fa97c49d49cd.png" width="70%"></li>
</ul>
<h2 id="硬體架構"><a href="#硬體架構" class="headerlink" title="硬體架構"></a>硬體架構</h2><img src="https://image3.slideserve.com/5808060/slide2-l.jpg" width="70%">

<h3 id="主要元素"><a href="#主要元素" class="headerlink" title="主要元素"></a>主要元素</h3><ul>
<li>中央處理單元（CPU）：<br>  負責執行指令、處理數據。架構設計包括CPU的指令集（如x86、ARM）、處理核心數量及其運作方式（單核、多核、超線程等）。</li>
<li>記憶體架構：<br>  隨機存取記憶體（RAM）：短期存儲數據，提供運行中的程序和系統需要的暫存空間。<br>  快取記憶體（Cache）：臨時存儲經常訪問的數據，加快CPU訪問數據的速度。<br>  主存與次存：<br>  指揮如何管理主存（RAM）與次存（如硬碟、SSD）之間的數據交換。</li>
<li>   總線架構：<br>   連接處理器、記憶體和其他設備的通訊路徑。不同總線（如系統總線、資料總線、地址總線）影響數據的傳輸速度和效率。</li>
<li>   輸入&#x2F;輸出（I&#x2F;O）系統：<br>   硬體如何與外部設備（如鍵盤、螢幕、硬碟）互動，設計影響硬體和外部設備之間的數據交換效率。</li>
<li>   主板（Motherboard）：<br>   整個硬體架構的核心，將所有硬體元件互相連接，並確保它們能有效運作。</li>
</ul>
<h3 id="硬體架構的作用"><a href="#硬體架構的作用" class="headerlink" title="硬體架構的作用"></a>硬體架構的作用</h3><ul>
<li>   性能與效率：<br>   不同的架構設計會直接影響系統的性能。<br>   例如，多核心架構可以提升並行處理能力，<br>   快取記憶體的大小和設計可以加快數據存取速度。</li>
<li><pre><code>兼容性：
  硬體架構必須與軟體系統兼容，
  從指令集架構（ISA）到I/O設備的設計都需與操作系統和應用程序相容。
</code></pre>
</li>
<li>   功耗與散熱：<br>   現代硬體架構中，<br>   功耗管理和散熱設計也是重要考量，<br>   特別是移動設備和伺服器中。</li>
</ul>
<h2 id="CPU-架構"><a href="#CPU-架構" class="headerlink" title="CPU 架構"></a>CPU 架構</h2><img src="https://media.cheggcdn.com/media/5d1/5d13faf4-a7f9-4e63-8d48-8b9760142a6f/phpoHB0Si" width="70%">

<p>Memory Unit（記憶體單元）：</p>
<ul>
<li>元件負責儲存數據和指令，<br>CPU通過與記憶體單元進行數據交換來執行運算。<br>圖中顯示，記憶體單元與累加器（Accumulator）<br>和B寄存器（B Register）進行雙向數據傳輸。</li>
<li>Accumulator（累加器）：<br>累加器是一種寄存器，<br>用來儲存運算的中間結果。<br>它通常是算術或邏輯運算中的主要暫存器，<br>會接收從記憶體單元讀取的數據，<br>並在完成運算後將結果返回到記憶體或繼續進行其他運算。</li>
<li>Logic Circuits（邏輯電路）：<br>邏輯電路是算術邏輯單元中的核心組件，負責進行各種邏輯運算（如與、或、非、異或等）和算術運算（如加法、減法）。它會從累加器和B寄存器中接收數據，並執行指令。</li>
<li>B Register（B寄存器）：<br>B寄存器是另一個暫存器，通常用來存放第二個運算數。與累加器配合，B寄存器可以存放需要與累加器中的值進行運算的數據。</li>
<li>Control Unit（控制單元）：<br>控制單元負責指揮整個CPU的運作，<br>發送控制信號來調度ALU進行各項運算。<br>控制單元指揮累加器、B寄存器和邏輯電路進行相應操作，<br>並與記憶體單元交互數據。</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>進位制</title>
    <url>/2024/09/12/%E9%80%B2%E4%BD%8D%E5%88%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="電腦的組成"><a href="#電腦的組成" class="headerlink" title="電腦的組成"></a>電腦的組成</h1><h1 id="進位"><a href="#進位" class="headerlink" title="進位"></a>進位</h1><ul>
<li><p>十進制<br>生活中的進位制是十進制，這種進位制通常使用10個阿拉伯數字（即 0-9 ）進行記數<br>0 1 2 3 4 5 6 7 8 9 10</p>
</li>
<li><p>二進制<br>幾乎所有的電子計算機內部都使用二進位制，分別為「0」和「1」表示「關」和「開」。用於大多數電子計數器。<br>0 1 10 11 100 101 110 111 1000 1001 1010 1011</p>
</li>
<li><p>十六進制	<br>經常用於計算機領域，2到4次冪。十六位數字為「0-9」，接著是「A-F」。<br>0 1 2 3 4 5 6 7 8 9 A B C D E F 10</p>
</li>
</ul>
<h2 id="10進位轉2進位"><a href="#10進位轉2進位" class="headerlink" title="10進位轉2進位"></a>10進位轉2進位</h2><p>67(十進位) </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">67÷2 = 33...1</span><br><span class="line">33÷2 = 16...1</span><br><span class="line">16÷2 = 8....0</span><br><span class="line">8÷2 = 4...0</span><br><span class="line">4÷2 = 2...0</span><br><span class="line">2÷2 = 1...0</span><br><span class="line">1÷2 = 0...1</span><br></pre></td></tr></table></figure>
<p>所以二進制就是 1000011</p>
<h2 id="2進位轉16進位"><a href="#2進位轉16進位" class="headerlink" title="2進位轉16進位"></a>2進位轉16進位</h2><p>10110011</p>
<p>先拆解數字<br>1011與0011</p>
<p>1011 &#x3D; B<br>0011 &#x3D; 3</p>
<p>所以10110011 &#x3D; B3</p>
<h1 id="2進位轉成10進位"><a href="#2進位轉成10進位" class="headerlink" title="2進位轉成10進位"></a>2進位轉成10進位</h1><p>1101<br>就如我們小時候學的數學一樣</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">千 百 十 個</span><br><span class="line">1  1  0  1</span><br></pre></td></tr></table></figure>

<p>個 2^0 * 1 &#x3D; 1<br>十 2^1 *0 &#x3D; 0<br>百 2^2 *1 &#x3D; 4<br>千 2^3 *1 &#x3D; 8</p>
<p>1+0+4+8 &#x3D; 13</p>
<p>1101(二進制) 的十進制就是 13(十進制)</p>
<hr>
<h2 id="title-計算機概論6date-2024-10-16-08-58-19tags"><a href="#title-計算機概論6date-2024-10-16-08-58-19tags" class="headerlink" title="title: 計算機概論6date: 2024-10-16 08:58:19tags:"></a>title: 計算機概論6<br>date: 2024-10-16 08:58:19<br>tags:</h2><h1 id="overflow-溢位"><a href="#overflow-溢位" class="headerlink" title="overflow 溢位"></a>overflow 溢位</h1><p>七進制舉例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">    <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1.</span>   +<span class="number">7</span></span><br><span class="line"></span><br><span class="line">“+” <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1.</span>   +<span class="number">7</span></span><br><span class="line">-----------------</span><br><span class="line">    <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>第四位數如果原本是正數加完之後如果變成負數就是超過表示範圍</p>
<p>1001  →  0110 → 0111</p>
<p>補數可以說是將數值變成負數</p>
<p>1001 &#x3D; -7</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> <span class="number">1001</span> = -<span class="number">7</span></span><br><span class="line"></span><br><span class="line">+<span class="number">1001</span> = -<span class="number">7</span></span><br><span class="line">-------</span><br><span class="line"> <span class="number">00</span>10</span><br></pre></td></tr></table></figure>

<p>一個負數加一個負數 &#x3D; 正數 &#x3D; overflow</p>
<p>一個正數加一個正數 &#x3D; 負數 &#x3D; overflow</p>
<h1 id="練習"><a href="#練習" class="headerlink" title="練習"></a>練習</h1><p>11100110 十進制答案</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">11100110</span> -&gt; 00011001 （一的補數）-&gt; 00011010 （二的補數）= -<span class="number">26</span> </span><br></pre></td></tr></table></figure>

<ul>
<li><p><strong>解釋</strong></p>
<p>  <strong>原始二進制數：</strong></p>
<p>  •    11100110</p>
<p>  這是一個 8 位的二進制數，表示它是用來表示一個 <strong>有符號的數字</strong>，其中最高位（最左邊的 1）是符號位。當最高位是 1 時，這個數是負數；當最高位是 0 時，這個數是正數。</p>
<p>  <strong>2. 求一的補數：</strong></p>
<p>  •    將每個位的數字反轉，將 1 變成 0，0 變成 1。</p>
<p>  •    原數字是 11100110，它的一的補數是 00011001。</p>
<p>  <strong>3. 求二的補數：</strong></p>
<p>  •    在一的補數基礎上加上 1。</p>
<p>  •    00011001 + 1 &#x3D; 00011010。</p>
<p>  <strong>4. 將二進制數轉換為十進制數：</strong></p>
<p>  •    現在，我們已經得到了 00011010，它是二的補數形式，用來表示負數。</p>
<p>  •    00011010 &#x3D; 26（十進制）。</p>
</li>
</ul>
<h2 id="檢查碼"><a href="#檢查碼" class="headerlink" title="檢查碼"></a>檢查碼</h2><ul>
<li>例如身份字號F233456789</li>
<li>其中F代表地區</li>
<li>剩下七個數字為流水號</li>
</ul>
<h2 id="Big-5編碼規則（可變長度編碼）"><a href="#Big-5編碼規則（可變長度編碼）" class="headerlink" title="Big - 5編碼規則（可變長度編碼）"></a>Big - 5編碼規則（可變長度編碼）</h2><ul>
<li>兩個byte代表一個漢字</li>
<li>想辦法與英文字母相容</li>
</ul>
<p>分首碼次碼，高位元的在前面</p>
<p><img src="https://idv.sinica.edu.tw/bear/charcodes/images/fig9-2.gif" alt="cscl.png"></p>
<h3 id="舉例：big-5-cont’"><a href="#舉例：big-5-cont’" class="headerlink" title="舉例：big-5 (cont’)"></a>舉例：big-5 (cont’)</h3><ul>
<li><p>0  一   Ａ4440</p>
</li>
<li><p>1  乙    A4440</p>
</li>
<li><p>3  丁    A4440</p>
</li>
<li><p>5400 籲 C67E</p>
</li>
<li><p>5401 乂 C940</p>
</li>
<li><p>5402 乜 C941</p>
</li>
<li><p>5403 凵 C942</p>
</li>
<li><p>5404 匚 C943</p>
</li>
<li><p>5405 厂 C944</p>
</li>
<li><p>5406 万 C945</p>
</li>
<li><p>5407 丌 C946</p>
</li>
</ul>
<p><a href="https://web.tnu.edu.tw/me/study/moodle/tutor/vb6/tutor/r05/index.htm">https://web.tnu.edu.tw/me/study/moodle/tutor/vb6/tutor/r05/index.htm</a></p>
<p>其中有 408 個符號和所謂常用字 5401 個,<br>次常用字 7652 個</p>
<h2 id="輸入法"><a href="#輸入法" class="headerlink" title="輸入法"></a>輸入法</h2><ul>
<li>字音輸入法<ul>
<li>注音</li>
<li>拼音</li>
</ul>
</li>
<li>字型輸入法<ul>
<li>倉頡</li>
<li>大易</li>
</ul>
</li>
</ul>
<p>假如在鍵盤上我們可以應用的按件數是n</p>
<p>則n個鍵可以組成</p>
<p>$ n +n^2+n^3+…..</p>
<h3 id="舉例"><a href="#舉例" class="headerlink" title="舉例"></a>舉例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0 1 1 0  ———&gt;  6</span><br><span class="line"></span><br><span class="line">1  1 1 0 ———&gt;   -6</span><br><span class="line"></span><br><span class="line">0 0 0 0 ——→     0</span><br><span class="line"></span><br><span class="line">1  0 0 0 ———&gt;  -0 [x]</span><br><span class="line"></span><br><span class="line">加法</span><br><span class="line"></span><br><span class="line">     0  1   1   0</span><br><span class="line"></span><br><span class="line">+   1   1   1   0</span><br><span class="line">--------------------</span><br><span class="line"></span><br><span class="line">	0   1   0   0</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>上面是錯誤的</p>
<p>每個輸入法都有規則，開頭的第一位是1就是負數0就是正數</p>
<p>也可以用2的補數表去計算</p>
<h3 id="正確"><a href="#正確" class="headerlink" title="正確"></a>正確</h3><p>1   1   0  1 舉例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1101  2進位轉成 10進位</span><br><span class="line"></span><br><span class="line">1 1 0 1 前面第一個是1 代表示負數</span><br><span class="line"></span><br><span class="line">所以要取二的補數</span><br><span class="line"></span><br><span class="line">1 1 0 1  → 0 0 1 0 = 一的補數第一位再加一 = 2 的補數</span><br><span class="line"></span><br><span class="line">0 0 1 0</span><br><span class="line">+     1</span><br><span class="line">--------</span><br><span class="line">0 0 1 1 (2進位） =  - 3(十進位）</span><br></pre></td></tr></table></figure>

<p>轉換後之後記得加上負號</p>
<p>-7 寫出2的補數表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7 = 0111</span><br><span class="line"></span><br><span class="line">0111 → 1000 = 一的補數再加一 = 二的補數  = 1001(二的補數）</span><br></pre></td></tr></table></figure>

<p>1 0 0 0的補數  &#x3D; 1 0 0 0</p>
<p>為什麼？</p>
<ul>
<li>因為在4位2進制下多出來的會被拋棄</li>
</ul>
<p>4位補數的範圍</p>
<table>
<thead>
<tr>
<th>二進制</th>
<th>十進制</th>
<th>說明</th>
</tr>
</thead>
<tbody><tr>
<td><code>0000</code></td>
<td>0</td>
<td>正數 0</td>
</tr>
<tr>
<td><code>0001</code></td>
<td>+1</td>
<td>正數 1</td>
</tr>
<tr>
<td><code>0010</code></td>
<td>+2</td>
<td>正數 2</td>
</tr>
<tr>
<td><code>0011</code></td>
<td>+3</td>
<td>正數 3</td>
</tr>
<tr>
<td><code>0100</code></td>
<td>+4</td>
<td>正數 4</td>
</tr>
<tr>
<td><code>0101</code></td>
<td>+5</td>
<td>正數 5</td>
</tr>
<tr>
<td><code>0110</code></td>
<td>+6</td>
<td>正數 6</td>
</tr>
<tr>
<td><code>0111</code></td>
<td>+7</td>
<td>正數 7</td>
</tr>
<tr>
<td><code>1000</code></td>
<td>-8</td>
<td>負數 -8，特殊情況</td>
</tr>
<tr>
<td><code>1001</code></td>
<td>-7</td>
<td>負數 -7</td>
</tr>
<tr>
<td><code>1010</code></td>
<td>-6</td>
<td>負數 -6</td>
</tr>
<tr>
<td><code>1011</code></td>
<td>-5</td>
<td>負數 -5</td>
</tr>
<tr>
<td><code>1100</code></td>
<td>-4</td>
<td>負數 -4</td>
</tr>
<tr>
<td><code>1101</code></td>
<td>-3</td>
<td>負數 -3</td>
</tr>
<tr>
<td><code>1110</code></td>
<td>-2</td>
<td>負數 -2</td>
</tr>
<tr>
<td><code>1111</code></td>
<td>-1</td>
<td>負數 -1</td>
</tr>
</tbody></table>
<h3 id="表達範圍"><a href="#表達範圍" class="headerlink" title="表達範圍"></a>表達範圍</h3><p>4 bits &#x3D; +7 ~ -8</p>
<p>&#x3D; +2^(4-1) -1 ~ -2(4-1)</p>
<p>n bits &#x3D; +2^(n-1) -1  ~ -2^(n-1)</p>
]]></content>
      <tags>
        <tag>計算機概論</tag>
      </tags>
  </entry>
</search>
